
> barqly-vault@0.1.0 test:run
> vitest run


 RUN  v3.2.4 /Users/nauman/projects/barqly-vault/src-ui

 ✓ src/__tests__/lib/tauri-safe.test.ts (9 tests) 59ms
stdout | src/__tests__/hooks/useKeyGeneration/state-management.test.ts
Barqly Logger available at window.__barqlyLogger

stdout | src/__tests__/hooks/tauri-api-integration.test.ts
Barqly Logger available at window.__barqlyLogger

stdout | src/__tests__/components/ui/LoadingSpinner.test.tsx
Barqly Logger available at window.__barqlyLogger

stdout | src/__tests__/components/ui/ErrorMessage.test.tsx
Barqly Logger available at window.__barqlyLogger

stdout | src/__tests__/hooks/useKeyGeneration/state-management.test.ts > useKeyGeneration - State Management > should set loading state during operations
[2025-08-02T20:44:05.261Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:05.261Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.261Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.261Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.261Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.261Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:05.262Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/components/ui/SuccessMessage.test.tsx
Barqly Logger available at window.__barqlyLogger

stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > Cross-Hook API Error Handling > should handle web environment errors consistently across all hooks
[2025-08-02T20:44:05.276Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test"
}
[2025-08-02T20:44:05.276Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 7
}
[2025-08-02T20:44:05.277Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test",
  "passphraseLength": 7
}
[2025-08-02T20:44:05.277Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.277Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.277Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test"
}
Additional data: { label: [32m'test'[39m }
[2025-08-02T20:44:05.277Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 7
}

stdout | src/__tests__/pages/SetupPage.test.tsx
Barqly Logger available at window.__barqlyLogger

stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > Cross-Hook API Error Handling > should handle web environment errors consistently across all hooks
Additional data: {
  errorType: [32m'Object'[39m,
  errorDetails: {
    code: [32m'INTERNAL_ERROR'[39m,
    message: [32m'This feature requires the desktop application'[39m,
    recovery_guidance: [32m'Please use the desktop version of Barqly Vault to access this feature'[39m,
    user_actionable: [33mtrue[39m
  }
}

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx
Barqly Logger available at window.__barqlyLogger

stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > Cross-Hook API Error Handling > should handle undefined invoke errors consistently across hooks
[2025-08-02T20:44:05.284Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key-label"
}
[2025-08-02T20:44:05.284Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.285Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "",
  "passphraseLength": 0
}
[2025-08-02T20:44:05.285Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": false,
  "error": "Key label is required"
}
Additional data: {
  error: {
    code: [32m'INVALID_INPUT'[39m,
    message: [32m'Key label is required'[39m,
    recovery_guidance: [32m'Please provide a unique label for the new key'[39m,
    user_actionable: [33mtrue[39m
  }
}

stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > API Call Consistency > should use safeInvoke for all Tauri commands across hooks
[2025-08-02T20:44:05.292Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key-label"
}
[2025-08-02T20:44:05.292Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.292Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key-label",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.292Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.292Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.292Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key-label"
}
Additional data: { label: [32m'test-key-label'[39m }
[2025-08-02T20:44:05.292Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > API Call Consistency > should use safeInvoke for all Tauri commands across hooks
[2025-08-02T20:44:05.292Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:05.292Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > API Call Consistency > should use safeInvoke for all Tauri commands across hooks
[2025-08-02T20:44:05.292Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test-key-label",
  "timestamp": "2025-08-02T20:44:05.292Z"
}
Additional data: { label: [32m'test-key-label'[39m, timestamp: [32m'2025-08-02T20:44:05.292Z'[39m }

stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > API Call Consistency > should use safeInvoke for all Tauri commands across hooks
[2025-08-02T20:44:05.293Z] [INFO] [useKeyGeneration] Key generation successful | Data: {
  "publicKey": "age1test...",
  "keyId": "test",
  "savedPath": "/path"
}
Additional data: { publicKey: [32m'age1test...'[39m, keyId: [32m'test'[39m, savedPath: [32m'/path'[39m }

 ✓ src/__tests__/components/ui/CollapsibleHelp.test.tsx (10 tests) 54ms
stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > API Call Consistency > should use safeListen for progress tracking across hooks
[2025-08-02T20:44:05.298Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key-label"
}
[2025-08-02T20:44:05.298Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.298Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key-label",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.298Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.298Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.298Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key-label"
}
Additional data: { label: [32m'test-key-label'[39m }
[2025-08-02T20:44:05.298Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > API Call Consistency > should use safeListen for progress tracking across hooks
[2025-08-02T20:44:05.298Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {}
Additional data: { isValid: [90mundefined[39m, message: [90mundefined[39m }
Additional data: { message: [90mundefined[39m }
Additional data: {
  errorType: [32m'Object'[39m,
  errorDetails: {
    code: [32m'WEAK_PASSPHRASE'[39m,
    message: [32m'Passphrase is too weak'[39m,
    recovery_guidance: [32m'Please use a stronger passphrase'[39m,
    user_actionable: [33mtrue[39m
  }
}

 ✓ src/__tests__/hooks/useFileEncryption/state-management.test.ts (2 tests) 112ms
stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > Error Recovery Across Hooks > should allow error recovery and retry for all hooks after API failures
[2025-08-02T20:44:05.299Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key-label"
}
[2025-08-02T20:44:05.299Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.299Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key-label",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.299Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.299Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.299Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key-label"
}
Additional data: { label: [32m'test-key-label'[39m }
[2025-08-02T20:44:05.299Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > Error Recovery Across Hooks > should allow error recovery and retry for all hooks after API failures
[2025-08-02T20:44:05.300Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {}
Additional data: { isValid: [90mundefined[39m, message: [90mundefined[39m }
Additional data: { message: [90mundefined[39m }
Additional data: {
  errorType: [32m'Object'[39m,
  errorDetails: {
    code: [32m'WEAK_PASSPHRASE'[39m,
    message: [32m'Passphrase is too weak'[39m,
    recovery_guidance: [32m'Please use a stronger passphrase'[39m,
    user_actionable: [33mtrue[39m
  }
}

stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > Error Recovery Across Hooks > should handle state cleanup properly across hooks when errors occur
[2025-08-02T20:44:05.302Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key-label"
}
[2025-08-02T20:44:05.302Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.302Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "",
  "passphraseLength": 0
}
[2025-08-02T20:44:05.302Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": false,
  "error": "Key label is required"
}
Additional data: {
  error: {
    code: [32m'INVALID_INPUT'[39m,
    message: [32m'Key label is required'[39m,
    recovery_guidance: [32m'Please provide a unique label for the new key'[39m,
    user_actionable: [33mtrue[39m
  }
}

stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > Memory and Resource Management > should properly clean up progress listeners across all hooks
[2025-08-02T20:44:05.304Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key-label"
}
[2025-08-02T20:44:05.304Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.304Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key-label",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.304Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.304Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.304Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key-label"
}
Additional data: { label: [32m'test-key-label'[39m }
[2025-08-02T20:44:05.304Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > Memory and Resource Management > should properly clean up progress listeners across all hooks
[2025-08-02T20:44:05.304Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {}
Additional data: { isValid: [90mundefined[39m, message: [90mundefined[39m }
Additional data: { message: [90mundefined[39m }
Additional data: {
  errorType: [32m'Object'[39m,
  errorDetails: {
    code: [32m'WEAK_PASSPHRASE'[39m,
    message: [32m'Passphrase is too weak'[39m,
    recovery_guidance: [32m'Please use a stronger passphrase'[39m,
    user_actionable: [33mtrue[39m
  }
}

stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > Memory and Resource Management > should handle component unmounting during API operations
[2025-08-02T20:44:05.305Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test"
}
[2025-08-02T20:44:05.305Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.305Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.305Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.305Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.305Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test"
}
Additional data: { label: [32m'test'[39m }
[2025-08-02T20:44:05.305Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > Memory and Resource Management > should handle component unmounting during API operations
[2025-08-02T20:44:05.305Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:05.305Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/tauri-api-integration.test.ts > Hooks Tauri API Integration - Regression Prevention > Memory and Resource Management > should handle component unmounting during API operations
[2025-08-02T20:44:05.305Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test",
  "timestamp": "2025-08-02T20:44:05.305Z"
}
Additional data: { label: [32m'test'[39m, timestamp: [32m'2025-08-02T20:44:05.305Z'[39m }
[2025-08-02T20:44:05.305Z] [INFO] [useKeyGeneration] Key generation successful | Data: {
  "publicKey": "age1test...",
  "keyId": "test",
  "savedPath": "/path"
}
Additional data: { publicKey: [32m'age1test...'[39m, keyId: [32m'test'[39m, savedPath: [32m'/path'[39m }

 ❯ src/__tests__/hooks/tauri-api-integration.test.ts (8 tests | 7 failed) 35ms
   ✓ Hooks Tauri API Integration - Regression Prevention > Cross-Hook API Error Handling > should handle web environment errors consistently across all hooks 12ms
   × Hooks Tauri API Integration - Regression Prevention > Cross-Hook API Error Handling > should handle undefined invoke errors consistently across hooks 7ms
     → expected null to be truthy
   × Hooks Tauri API Integration - Regression Prevention > API Call Consistency > should use safeInvoke for all Tauri commands across hooks 6ms
     → expected "spy" to be called with arguments: [ 'select_files', Any<Object>, …(1) ][90m

Received: 

[1m  1st spy call:

[22m[2m  [[22m
[32m-   "select_files",[90m
[32m-   Any<Object>,[90m
[32m-   Any<String>,[90m
[31m+   "validate_passphrase",[90m
[31m+   {[90m
[31m+     "passphrase": "StrongPassword123!",[90m
[31m+   },[90m
[31m+   "useKeyGeneration",[90m
[2m  ][22m

[1m  2nd spy call:

[22m[2m  [[22m
[32m-   "select_files",[90m
[32m-   Any<Object>,[90m
[32m-   Any<String>,[90m
[31m+   "generate_key",[90m
[31m+   {[90m
[31m+     "label": "test-key-label",[90m
[31m+     "passphrase": "StrongPassword123!",[90m
[31m+   },[90m
[31m+   "useKeyGeneration",[90m
[2m  ][22m

[1m  3rd spy call:

[22m[2m  [[22m
[2m    "select_files",[22m
[32m-   Any<Object>,[90m
[32m-   Any<String>,[90m
[31m+   {[90m
[31m+     "selection_type": "Files",[90m
[31m+   },[90m
[2m  ][22m
[39m[90m

Number of calls: [1m3[22m
[39m
   × Hooks Tauri API Integration - Regression Prevention > API Call Consistency > should use safeListen for progress tracking across hooks 1ms
     → Passphrase is too weak
   × Hooks Tauri API Integration - Regression Prevention > Error Recovery Across Hooks > should allow error recovery and retry for all hooks after API failures 3ms
     → expected [Function] to throw error including 'Network error' but got 'Passphrase is too weak'
   × Hooks Tauri API Integration - Regression Prevention > Error Recovery Across Hooks > should handle state cleanup properly across hooks when errors occur 2ms
     → expected [Function] to throw error including 'Connection failed' but got 'Key label is required'
   × Hooks Tauri API Integration - Regression Prevention > Memory and Resource Management > should properly clean up progress listeners across all hooks 1ms
     → expected [Function] to throw error including 'Operation cancelled' but got 'Passphrase is too weak'
   × Hooks Tauri API Integration - Regression Prevention > Memory and Resource Management > should handle component unmounting during API operations 1ms
     → expected false to be true // Object.is equality
 ✓ src/__tests__/components/ui/ProgressBar.test.tsx (39 tests) 83ms
 ✓ src/__tests__/components/ui/LoadingSpinner.test.tsx (38 tests) 71ms
stdout | src/__tests__/hooks/useKeyGeneration/state-management.test.ts > useKeyGeneration - State Management > should set loading state during operations
[2025-08-02T20:44:05.364Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:05.365Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/useKeyGeneration/state-management.test.ts > useKeyGeneration - State Management > should set loading state during operations
[2025-08-02T20:44:05.365Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test-key",
  "timestamp": "2025-08-02T20:44:05.365Z"
}
Additional data: { label: [32m'test-key'[39m, timestamp: [32m'2025-08-02T20:44:05.365Z'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/state-management.test.ts > useKeyGeneration - State Management > should set loading state during operations
[2025-08-02T20:44:05.365Z] [INFO] [useKeyGeneration] Key generation successful | Data: {
  "publicKey": "age1......",
  "keyId": "test-key-id",
  "savedPath": "~/.config/barqly-vault/keys/test-key-id.age"
}
Additional data: {
  publicKey: [32m'age1......'[39m,
  keyId: [32m'test-key-id'[39m,
  savedPath: [32m'~/.config/barqly-vault/keys/test-key-id.age'[39m
}

 ✓ src/__tests__/hooks/useKeyGeneration/state-management.test.ts (2 tests) 116ms
 ✓ src/__tests__/components/ui/ErrorMessage.test.tsx (39 tests) 100ms
 ✓ src/__tests__/components/ui/SuccessMessage.test.tsx (23 tests) 130ms
stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.375Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.479Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.486Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.491Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Component Rendering > should render the setup form when not loading and no success
[2025-08-02T20:44:05.373Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.505Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Component Rendering > should not render form when loading
[2025-08-02T20:44:05.507Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.512Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Component Rendering > should not render form when success is shown
[2025-08-02T20:44:05.516Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.521Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.525Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.530Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.521Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.549Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.554Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.555Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.560Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.565Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.566Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.569Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/components/forms/KeySelectionDropdown.test.tsx (23 tests) 310ms
stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.572Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.573Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.577Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.579Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.580Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.585Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.587Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.589Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.590Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.591Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/components/forms/FileSelectionButton.test.tsx (23 tests) 339ms
stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.595Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.593Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.599Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.603Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.603Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.607Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.613Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.615Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.618Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.618Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.622Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.626Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.630Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.631Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.633Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.638Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.640Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.641Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.644Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.644Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.646Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.647Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.651Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.653Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.654Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.655Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.657Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.660Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.660Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.663Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.666Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.665Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.667Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.669Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.670Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.672Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.673Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.675Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.675Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.678Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.678Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.681Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.682Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.685Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.684Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.698Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.701Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
[2025-08-02T20:44:05.703Z] [DEBUG] [Component:SetupPage] handleKeyGeneration started | Data: {
  "keyLabel": "Test Key",
  "passphraseLength": 18,
  "confirmPassphraseLength": 18
}
[2025-08-02T20:44:05.704Z] [INFO] [SetupPage] Setting hook state for key generation | Data: {
  "keyLabel": "Test Key"
}
Additional data: { keyLabel: [32m'Test Key'[39m }
[2025-08-02T20:44:05.704Z] [INFO] [SetupPage] Calling generateKey function

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.705Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.709Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment
Additional data: {
  error: TypeError: Cannot read properties of undefined (reading 'invoke')
      at [90m/Users/nauman/projects/barqly-vault/src-ui/[39msrc/__tests__/regression/form-submission-tauri-api.test.tsx:69:23
      at mockCall (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/spy/dist/index.js:96:15)
      at spy (file:///Users/nauman/projects/barqly-vault/node_modules/[4mtinyspy[24m/dist/index.js:47:103)
      at [90m/Users/nauman/projects/barqly-vault/src-ui/[39msrc/pages/SetupPage.tsx:75:13
      at onSubmit [90m(/Users/nauman/projects/barqly-vault/src-ui/[39msrc/pages/SetupPage.tsx:191:19[90m)[39m
      at HTMLUnknownElement.callCallback (/Users/nauman/projects/barqly-vault/node_modules/[4mreact-dom[24m/cjs/react-dom.development.js:4164:14)
      at HTMLUnknownElement.callTheUserObjectsOperation (/Users/nauman/projects/barqly-vault/node_modules/[4mjsdom[24m/lib/jsdom/living/generated/EventListener.js:26:30)
      at innerInvokeEventListeners (/Users/nauman/projects/barqly-vault/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:350:25)
      at invokeEventListeners (/Users/nauman/projects/barqly-vault/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:286:3)
      at HTMLUnknownElementImpl._dispatch (/Users/nauman/projects/barqly-vault/node_modules/[4mjsdom[24m/lib/jsdom/living/events/EventTarget-impl.js:233:9)
}

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.713Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.717Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.722Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.726Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.729Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.732Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.735Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.738Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.739Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.741Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.743Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.746Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.749Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.753Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.760Z] [DEBUG] [Component:SetupPage] handleKeyGeneration started | Data: {
  "keyLabel": "Test Key",
  "passphraseLength": 18,
  "confirmPassphraseLength": 18
}
[2025-08-02T20:44:05.760Z] [INFO] [SetupPage] Setting hook state for key generation | Data: {
  "keyLabel": "Test Key"
}
Additional data: { keyLabel: [32m'Test Key'[39m }
[2025-08-02T20:44:05.760Z] [INFO] [SetupPage] Calling generateKey function

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via Enter key press
[2025-08-02T20:44:05.761Z] [INFO] [SetupPage] generateKey completed successfully

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.765Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.784Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.787Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.790Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.792Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.795Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.799Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.803Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.806Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.817Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.822Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.824Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.827Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.830Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.834Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.838Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.841Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.845Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.848Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.851Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.854Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.856Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.859Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.863Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.866Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.869Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.872Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.886Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.890Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.892Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.896Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.897Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.904Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.907Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.911Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.914Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.917Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.920Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.925Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/components/forms/PassphraseValidationFeedback.test.tsx (6 tests) 34ms
stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.930Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.933Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.936Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.940Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.946Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/components/forms/PassphraseField.test.tsx (13 tests) 39ms
stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.951Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts
Barqly Logger available at window.__barqlyLogger

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.963Z] [DEBUG] [Component:SetupPage] handleKeyGeneration started | Data: {
  "keyLabel": "Test Key",
  "passphraseLength": 18,
  "confirmPassphraseLength": 18
}
[2025-08-02T20:44:05.963Z] [INFO] [SetupPage] Setting hook state for key generation | Data: {
  "keyLabel": "Test Key"
}
Additional data: { keyLabel: [32m'Test Key'[39m }
[2025-08-02T20:44:05.963Z] [INFO] [SetupPage] Calling generateKey function

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should handle form submission via button click
[2025-08-02T20:44:05.963Z] [INFO] [SetupPage] generateKey completed successfully

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Critical Tauri API Regression Prevention > should handle safeInvoke throwing "Cannot read properties of undefined" error gracefully
[2025-08-02T20:44:05.973Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:05.974Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.974Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.974Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.974Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.974Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:05.974Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should prevent form submission when form is invalid
[2025-08-02T20:44:05.967Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Critical Tauri API Regression Prevention > should handle safeInvoke throwing "Cannot read properties of undefined" error gracefully
Additional data: {
  errorType: [32m'TypeError'[39m,
  errorDetails: TypeError: Cannot read properties of undefined (reading 'invoke')
      at [90m/Users/nauman/projects/barqly-vault/src-ui/[39msrc/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts:35:32
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
      at new Promise (<anonymous>)
      at runWithTimeout (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
      at runTest (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
  [90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Critical Tauri API Regression Prevention > should handle web environment CommandError from safeInvoke
[2025-08-02T20:44:05.980Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:05.980Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.980Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.980Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.980Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.980Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:05.980Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Critical Tauri API Regression Prevention > should handle web environment CommandError from safeInvoke
Additional data: {
  errorType: [32m'Object'[39m,
  errorDetails: {
    code: [32m'INTERNAL_ERROR'[39m,
    message: [32m'This feature requires the desktop application'[39m,
    recovery_guidance: [32m'Please use the desktop version of Barqly Vault to access this feature'[39m,
    user_actionable: [33mtrue[39m
  }
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Critical Tauri API Regression Prevention > should handle safeListen setup failures
[2025-08-02T20:44:05.982Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:05.982Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.982Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.982Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.982Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.982Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:05.982Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Critical Tauri API Regression Prevention > should handle safeListen setup failures
[2025-08-02T20:44:05.983Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:05.983Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Critical Tauri API Regression Prevention > should handle safeListen setup failures
Additional data: {
  errorType: [32m'Error'[39m,
  errorDetails: Error: Failed to set up progress listener
      at [90m/Users/nauman/projects/barqly-vault/src-ui/[39msrc/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts:88:40
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
      at new Promise (<anonymous>)
      at runWithTimeout (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
      at runTest (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Critical Tauri API Regression Prevention > should ensure unlisten is called even when generateKey fails
[2025-08-02T20:44:05.984Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:05.984Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.984Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.984Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.984Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.984Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:05.984Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Critical Tauri API Regression Prevention > should ensure unlisten is called even when generateKey fails
[2025-08-02T20:44:05.984Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:05.984Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Critical Tauri API Regression Prevention > should ensure unlisten is called even when generateKey fails
[2025-08-02T20:44:05.984Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test-key",
  "timestamp": "2025-08-02T20:44:05.984Z"
}
Additional data: { label: [32m'test-key'[39m, timestamp: [32m'2025-08-02T20:44:05.984Z'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Critical Tauri API Regression Prevention > should ensure unlisten is called even when generateKey fails
Additional data: {
  commandError: Error: Key generation failed
      at [90m/Users/nauman/projects/barqly-vault/src-ui/[39msrc/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts:111:32
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
      at new Promise (<anonymous>)
      at runWithTimeout (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
      at runTest (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
}
Additional data: {
  errorType: [32m'Error'[39m,
  errorDetails: Error: Key generation failed
      at [90m/Users/nauman/projects/barqly-vault/src-ui/[39msrc/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts:111:32
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
      at new Promise (<anonymous>)
      at runWithTimeout (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
      at runTest (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Environment-Specific Behavior > should handle environment detection changes during operation
[2025-08-02T20:44:05.989Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:05.989Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.989Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.989Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.989Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.989Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:05.989Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Environment-Specific Behavior > should handle environment detection changes during operation
[2025-08-02T20:44:05.989Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:05.989Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Environment-Specific Behavior > should handle environment detection changes during operation
[2025-08-02T20:44:05.989Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test-key",
  "timestamp": "2025-08-02T20:44:05.989Z"
}
Additional data: { label: [32m'test-key'[39m, timestamp: [32m'2025-08-02T20:44:05.989Z'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Environment-Specific Behavior > should handle environment detection changes during operation
Additional data: {
  commandError: {
    code: [32m'INTERNAL_ERROR'[39m,
    message: [32m'This feature requires the desktop application'[39m,
    recovery_guidance: [32m'Please use the desktop version of Barqly Vault to access this feature'[39m,
    user_actionable: [33mtrue[39m
  }
}
Additional data: {
  errorType: [32m'Object'[39m,
  errorDetails: {
    code: [32m'INTERNAL_ERROR'[39m,
    message: [32m'This feature requires the desktop application'[39m,
    recovery_guidance: [32m'Please use the desktop version of Barqly Vault to access this feature'[39m,
    user_actionable: [33mtrue[39m
  }
}

 ✓ src/__tests__/hooks/useFileDecryption/file-selection.test.ts (6 tests) 19ms
stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Environment-Specific Behavior > should handle partial operation failures gracefully
[2025-08-02T20:44:05.990Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:05.990Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.990Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.990Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.990Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.990Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:05.990Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Environment-Specific Behavior > should handle partial operation failures gracefully
[2025-08-02T20:44:05.990Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:05.990Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Environment-Specific Behavior > should handle partial operation failures gracefully
[2025-08-02T20:44:05.990Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test-key",
  "timestamp": "2025-08-02T20:44:05.990Z"
}
Additional data: { label: [32m'test-key'[39m, timestamp: [32m'2025-08-02T20:44:05.990Z'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Environment-Specific Behavior > should handle partial operation failures gracefully
Additional data: {
  commandError: Error: Crypto operation failed
      at [90m/Users/nauman/projects/barqly-vault/src-ui/[39msrc/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts:169:44
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
      at new Promise (<anonymous>)
      at runWithTimeout (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
      at runTest (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
}
Additional data: {
  errorType: [32m'Error'[39m,
  errorDetails: Error: Crypto operation failed
      at [90m/Users/nauman/projects/barqly-vault/src-ui/[39msrc/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts:169:44
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
      at new Promise (<anonymous>)
      at runWithTimeout (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
      at runTest (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Progress Tracking Integration > should handle progress events through safeListen
[2025-08-02T20:44:05.991Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:05.991Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.991Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.991Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.991Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.991Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:05.991Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Progress Tracking Integration > should handle progress events through safeListen
[2025-08-02T20:44:05.991Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:05.991Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Progress Tracking Integration > should handle progress events through safeListen
[2025-08-02T20:44:05.991Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test-key",
  "timestamp": "2025-08-02T20:44:05.991Z"
}
Additional data: { label: [32m'test-key'[39m, timestamp: [32m'2025-08-02T20:44:05.991Z'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Progress Tracking Integration > should handle progress events through safeListen
[2025-08-02T20:44:05.991Z] [INFO] [useKeyGeneration] Key generation successful | Data: {
  "publicKey": "age1test...",
  "keyId": "test-key",
  "savedPath": "/path"
}
Additional data: { publicKey: [32m'age1test...'[39m, keyId: [32m'test-key'[39m, savedPath: [32m'/path'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Progress Tracking Integration > should clear progress on reset
[2025-08-02T20:44:05.992Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test"
}
[2025-08-02T20:44:05.992Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 4
}
[2025-08-02T20:44:05.992Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test",
  "passphraseLength": 4
}
[2025-08-02T20:44:05.992Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.992Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.992Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test"
}
Additional data: { label: [32m'test'[39m }
[2025-08-02T20:44:05.992Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 4
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Progress Tracking Integration > should clear progress on reset
[2025-08-02T20:44:05.992Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:05.992Z] [DEBUG] [useKeyGeneration] Setting up progress listener
[2025-08-02T20:44:05.992Z] [DEBUG] [useKeyGeneration] Progress update received | Data: {
  "progress": 50,
  "message": "In progress..."
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Progress Tracking Integration > should clear progress on reset
[2025-08-02T20:44:05.992Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test",
  "timestamp": "2025-08-02T20:44:05.992Z"
}
Additional data: { label: [32m'test'[39m, timestamp: [32m'2025-08-02T20:44:05.992Z'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Progress Tracking Integration > should clear progress on reset
Additional data: {
  commandError: Error: Cancelled
      at [90m/Users/nauman/projects/barqly-vault/src-ui/[39msrc/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts:255:44
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
      at new Promise (<anonymous>)
      at runWithTimeout (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
      at runTest (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
}
Additional data: {
  errorType: [32m'Error'[39m,
  errorDetails: Error: Cancelled
      at [90m/Users/nauman/projects/barqly-vault/src-ui/[39msrc/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts:255:44
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
      at new Promise (<anonymous>)
      at runWithTimeout (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
      at runTest (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > State Management Integration > should maintain correct loading state throughout API calls
[2025-08-02T20:44:05.993Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:05.993Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.993Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.993Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.993Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.993Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:05.993Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > State Management Integration > should maintain correct loading state throughout API calls
[2025-08-02T20:44:05.994Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:05.994Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:05.990Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > State Management Integration > should maintain correct loading state throughout API calls
[2025-08-02T20:44:05.994Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test-key",
  "timestamp": "2025-08-02T20:44:05.994Z"
}
Additional data: { label: [32m'test-key'[39m, timestamp: [32m'2025-08-02T20:44:05.994Z'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > State Management Integration > should maintain correct loading state throughout API calls
[2025-08-02T20:44:05.994Z] [INFO] [useKeyGeneration] Key generation successful | Data: {
  "publicKey": "age1test...",
  "keyId": "test-key",
  "savedPath": "/path"
}
Additional data: { publicKey: [32m'age1test...'[39m, keyId: [32m'test-key'[39m, savedPath: [32m'/path'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > State Management Integration > should handle generateKey calls gracefully
[2025-08-02T20:44:05.995Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:05.995Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.995Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.995Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.995Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.995Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:05.995Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > State Management Integration > should handle generateKey calls gracefully
[2025-08-02T20:44:05.995Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:05.995Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > State Management Integration > should handle generateKey calls gracefully
[2025-08-02T20:44:05.995Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test-key",
  "timestamp": "2025-08-02T20:44:05.995Z"
}
Additional data: { label: [32m'test-key'[39m, timestamp: [32m'2025-08-02T20:44:05.995Z'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > State Management Integration > should handle generateKey calls gracefully
[2025-08-02T20:44:05.995Z] [INFO] [useKeyGeneration] Key generation successful | Data: {
  "publicKey": "age1test...",
  "keyId": "test-key",
  "savedPath": "/path"
}
Additional data: { publicKey: [32m'age1test...'[39m, keyId: [32m'test-key'[39m, savedPath: [32m'/path'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Error Recovery Integration > should allow retry after API failure
[2025-08-02T20:44:05.995Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:05.995Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:05.995Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.995Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.995Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.995Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:05.995Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Error Recovery Integration > should allow retry after API failure
Additional data: {
  errorType: [32m'Error'[39m,
  errorDetails: Error: Network error
      at [90m/Users/nauman/projects/barqly-vault/src-ui/[39msrc/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts:377:44
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
      at new Promise (<anonymous>)
      at runWithTimeout (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
      at runTest (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Error Recovery Integration > should allow retry after API failure
[2025-08-02T20:44:05.996Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:05.996Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.996Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.996Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:05.996Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Error Recovery Integration > should allow retry after API failure
[2025-08-02T20:44:05.996Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:05.996Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Error Recovery Integration > should allow retry after API failure
[2025-08-02T20:44:05.996Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test-key",
  "timestamp": "2025-08-02T20:44:05.996Z"
}
Additional data: { label: [32m'test-key'[39m, timestamp: [32m'2025-08-02T20:44:05.996Z'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Error Recovery Integration > should allow retry after API failure
[2025-08-02T20:44:05.996Z] [INFO] [useKeyGeneration] Key generation successful | Data: {
  "publicKey": "age1test...",
  "keyId": "test-key",
  "savedPath": "/path"
}
Additional data: { publicKey: [32m'age1test...'[39m, keyId: [32m'test-key'[39m, savedPath: [32m'/path'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Error Recovery Integration > should maintain state consistency during error recovery
[2025-08-02T20:44:05.996Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "original-key"
}
[2025-08-02T20:44:05.996Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 20
}
[2025-08-02T20:44:05.996Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "original-key",
  "passphraseLength": 20
}
[2025-08-02T20:44:05.996Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.996Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.996Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "original-key"
}
Additional data: { label: [32m'original-key'[39m }
[2025-08-02T20:44:05.996Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 20
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Error Recovery Integration > should maintain state consistency during error recovery
[2025-08-02T20:44:05.996Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:05.996Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Error Recovery Integration > should maintain state consistency during error recovery
[2025-08-02T20:44:05.996Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "original-key",
  "timestamp": "2025-08-02T20:44:05.996Z"
}
Additional data: { label: [32m'original-key'[39m, timestamp: [32m'2025-08-02T20:44:05.996Z'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Error Recovery Integration > should maintain state consistency during error recovery
Additional data: {
  commandError: Error: Generation failed
      at [90m/Users/nauman/projects/barqly-vault/src-ui/[39msrc/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts:432:32
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
      at new Promise (<anonymous>)
      at runWithTimeout (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
      at runTest (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
}
Additional data: {
  errorType: [32m'Error'[39m,
  errorDetails: Error: Generation failed
      at [90m/Users/nauman/projects/barqly-vault/src-ui/[39msrc/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts:432:32
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
      at new Promise (<anonymous>)
      at runWithTimeout (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
      at runTest (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Error Recovery Integration > should maintain state consistency during error recovery
[2025-08-02T20:44:05.997Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "modified-key"
}
[2025-08-02T20:44:05.997Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 20
}
[2025-08-02T20:44:05.997Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "modified-key",
  "passphraseLength": 20
}
[2025-08-02T20:44:05.997Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.997Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:05.997Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "modified-key"
}
Additional data: { label: [32m'modified-key'[39m }
[2025-08-02T20:44:05.997Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 20
}

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Error Recovery Integration > should maintain state consistency during error recovery
[2025-08-02T20:44:05.997Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:05.997Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Error Recovery Integration > should maintain state consistency during error recovery
[2025-08-02T20:44:05.997Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "modified-key",
  "timestamp": "2025-08-02T20:44:05.997Z"
}
Additional data: { label: [32m'modified-key'[39m, timestamp: [32m'2025-08-02T20:44:05.997Z'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts > useKeyGeneration - Tauri Integration & Regression Prevention > Error Recovery Integration > should maintain state consistency during error recovery
[2025-08-02T20:44:05.997Z] [INFO] [useKeyGeneration] Key generation successful | Data: {
  "publicKey": "age1modified...",
  "keyId": "modified-key",
  "savedPath": "/modified/path"
}
Additional data: {
  publicKey: [32m'age1modified...'[39m,
  keyId: [32m'modified-key'[39m,
  savedPath: [32m'/modified/path'[39m
}

 ✓ src/__tests__/components/forms/EnhancedInput.test.tsx (13 tests) 32ms
 ✓ src/__tests__/hooks/useKeyGeneration/tauri-integration.test.ts (12 tests) 30ms
 ✓ src/__tests__/hooks/useProgressTracking.test.ts (12 tests) 23ms
stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.006Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/components/forms/PassphraseRequirementsTooltip.test.tsx (6 tests) 28ms
stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.009Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.011Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.017Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.019Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.022Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/components/ui/PrimaryButton.test.tsx (13 tests) 32ms
stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.025Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.028Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/components/forms/PassphraseInput.test.tsx (38 tests) 755ms
 ✓ src/__tests__/components/ui/TrustIndicators.test.tsx (6 tests) 26ms
stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.038Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.042Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.045Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.050Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.053Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.055Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.058Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.063Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.068Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/components/forms/PassphraseStrengthIndicator.test.tsx (6 tests) 22ms
stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.070Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.073Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.077Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.081Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.082Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.085Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.090Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.126Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.133Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/components/forms/PassphraseVisibilityToggle.test.tsx (5 tests) 33ms
stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.193Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.200Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.214Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.219Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.221Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.225Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.228Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.231Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.235Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.239Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.242Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.244Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.247Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.251Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.255Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.258Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.261Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.263Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.266Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.268Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Submission - Critical Regression Prevention > should validate passphrase confirmation matches
[2025-08-02T20:44:06.271Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should sync component state with hook state for label
[2025-08-02T20:44:06.287Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should sync component state with hook state for label
[2025-08-02T20:44:06.301Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should sync component state with hook state for label
[2025-08-02T20:44:06.304Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should sync component state with hook state for label
[2025-08-02T20:44:06.307Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should sync component state with hook state for label
[2025-08-02T20:44:06.309Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should sync component state with hook state for label
[2025-08-02T20:44:06.313Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should sync component state with hook state for label
[2025-08-02T20:44:06.317Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should sync component state with hook state for label
[2025-08-02T20:44:06.319Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should sync component state with hook state for label
[2025-08-02T20:44:06.322Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should sync component state with hook state for passphrase
[2025-08-02T20:44:06.328Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should sync component state with hook state for passphrase
[2025-08-02T20:44:06.346Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should sync component state with hook state for passphrase
[2025-08-02T20:44:06.353Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should sync component state with hook state for passphrase
[2025-08-02T20:44:06.355Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should sync component state with hook state for passphrase
[2025-08-02T20:44:06.360Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.365Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.376Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.380Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.384Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.386Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.388Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.392Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.394Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.397Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.407Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.410Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.413Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.415Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.418Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.421Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.424Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.425Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.428Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.431Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.433Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.436Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.439Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.442Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.444Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.449Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.452Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.456Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.486Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.490Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.496Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.499Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.501Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.506Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.509Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/hooks/useKeyGeneration/passphrase-validation.test.ts
Barqly Logger available at window.__barqlyLogger

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.514Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.516Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.519Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/hooks/useKeyGeneration/passphrase-validation.test.ts > useKeyGeneration - Passphrase Validation > should validate label is provided
[2025-08-02T20:44:06.520Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "",
  "passphraseLength": 0
}
[2025-08-02T20:44:06.521Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": false,
  "error": "Key label is required"
}
Additional data: {
  error: {
    code: [32m'INVALID_INPUT'[39m,
    message: [32m'Key label is required'[39m,
    recovery_guidance: [32m'Please provide a unique label for the new key'[39m,
    user_actionable: [33mtrue[39m
  }
}

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.523Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.528Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/hooks/useKeyGeneration/passphrase-validation.test.ts > useKeyGeneration - Passphrase Validation > should validate passphrase is provided
[2025-08-02T20:44:06.527Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:06.528Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 0
}
[2025-08-02T20:44:06.528Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.528Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": false,
  "error": "Passphrase is required"
}
Additional data: {
  error: {
    code: [32m'INVALID_INPUT'[39m,
    message: [32m'Passphrase is required'[39m,
    recovery_guidance: [32m'Please provide a strong passphrase to protect the key'[39m,
    user_actionable: [33mtrue[39m
  }
}

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.530Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/hooks/useKeyGeneration/passphrase-validation.test.ts > useKeyGeneration - Passphrase Validation > should validate passphrase is not weak
[2025-08-02T20:44:06.530Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:06.530Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 4
}
[2025-08-02T20:44:06.530Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 4
}
[2025-08-02T20:44:06.530Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.530Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.530Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:06.530Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 4
}

stdout | src/__tests__/hooks/useKeyGeneration/passphrase-validation.test.ts > useKeyGeneration - Passphrase Validation > should validate passphrase is not weak
[2025-08-02T20:44:06.531Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {}
Additional data: { isValid: [90mundefined[39m, message: [90mundefined[39m }
Additional data: { message: [90mundefined[39m }
Additional data: {
  errorType: [32m'Object'[39m,
  errorDetails: {
    code: [32m'WEAK_PASSPHRASE'[39m,
    message: [32m'Passphrase is too weak'[39m,
    recovery_guidance: [32m'Please use a stronger passphrase'[39m,
    user_actionable: [33mtrue[39m
  }
}

stdout | src/__tests__/hooks/useKeyGeneration/passphrase-validation.test.ts > useKeyGeneration - Passphrase Validation > should handle passphrase validation errors
[2025-08-02T20:44:06.532Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:06.532Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 4
}
[2025-08-02T20:44:06.532Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 4
}
[2025-08-02T20:44:06.532Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.532Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.532Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:06.532Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 4
}

stdout | src/__tests__/hooks/useKeyGeneration/passphrase-validation.test.ts > useKeyGeneration - Passphrase Validation > should handle passphrase validation errors
[2025-08-02T20:44:06.532Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": false
}
Additional data: { isValid: [33mfalse[39m, message: [90mundefined[39m }
Additional data: { message: [90mundefined[39m }
Additional data: {
  errorType: [32m'Object'[39m,
  errorDetails: {
    code: [32m'WEAK_PASSPHRASE'[39m,
    message: [32m'Passphrase is too weak'[39m,
    recovery_guidance: [32m'Please use a stronger passphrase'[39m,
    user_actionable: [33mtrue[39m
  }
}

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.533Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/hooks/useKeyGeneration/passphrase-validation.test.ts > useKeyGeneration - Passphrase Validation > should handle validation errors without calling backend
[2025-08-02T20:44:06.534Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "",
  "passphraseLength": 0
}
[2025-08-02T20:44:06.534Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": false,
  "error": "Key label is required"
}
Additional data: {
  error: {
    code: [32m'INVALID_INPUT'[39m,
    message: [32m'Key label is required'[39m,
    recovery_guidance: [32m'Please provide a unique label for the new key'[39m,
    user_actionable: [33mtrue[39m
  }
}

 ✓ src/__tests__/hooks/useKeyGeneration/passphrase-validation.test.ts (5 tests) 19ms
stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.538Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.541Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.553Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.560Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-failure.test.ts
Barqly Logger available at window.__barqlyLogger

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.567Z] [DEBUG] [Component:SetupPage] handleKeyGeneration started | Data: {
  "keyLabel": "Test Key",
  "passphraseLength": 18,
  "confirmPassphraseLength": 18
}
[2025-08-02T20:44:06.567Z] [INFO] [SetupPage] Setting hook state for key generation | Data: {
  "keyLabel": "Test Key"
}
Additional data: { keyLabel: [32m'Test Key'[39m }
[2025-08-02T20:44:06.568Z] [INFO] [SetupPage] Calling generateKey function

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > State Synchronization - Regression Prevention > should call hook setLabel and setPassphrase before generateKey
[2025-08-02T20:44:06.568Z] [INFO] [SetupPage] generateKey completed successfully

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-failure.test.ts > useKeyGeneration - Key Generation Failure > should handle key generation errors
[2025-08-02T20:44:06.574Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:06.574Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 22
}
[2025-08-02T20:44:06.575Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 22
}
[2025-08-02T20:44:06.575Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.575Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.575Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:06.575Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 22
}

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-failure.test.ts > useKeyGeneration - Key Generation Failure > should handle key generation errors
[2025-08-02T20:44:06.575Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:06.575Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-failure.test.ts > useKeyGeneration - Key Generation Failure > should handle key generation errors
[2025-08-02T20:44:06.575Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test-key",
  "timestamp": "2025-08-02T20:44:06.575Z"
}
Additional data: { label: [32m'test-key'[39m, timestamp: [32m'2025-08-02T20:44:06.575Z'[39m }

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should display error message when hook returns error
[2025-08-02T20:44:06.572Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-failure.test.ts > useKeyGeneration - Key Generation Failure > should handle key generation errors
Additional data: {
  commandError: {
    code: [32m'KEY_GENERATION_FAILED'[39m,
    message: [32m'Failed to generate key'[39m,
    recovery_guidance: [32m'Please try again'[39m,
    user_actionable: [33mtrue[39m
  }
}
Additional data: {
  errorType: [32m'Object'[39m,
  errorDetails: {
    code: [32m'KEY_GENERATION_FAILED'[39m,
    message: [32m'Failed to generate key'[39m,
    recovery_guidance: [32m'Please try again'[39m,
    user_actionable: [33mtrue[39m
  }
}

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-failure.test.ts > useKeyGeneration - Key Generation Failure > should re-throw errors for component handling
[2025-08-02T20:44:06.586Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:06.586Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:06.586Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:06.586Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.586Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.586Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:06.586Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-failure.test.ts > useKeyGeneration - Key Generation Failure > should re-throw errors for component handling
[2025-08-02T20:44:06.586Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:06.586Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-failure.test.ts > useKeyGeneration - Key Generation Failure > should re-throw errors for component handling
[2025-08-02T20:44:06.586Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test-key",
  "timestamp": "2025-08-02T20:44:06.586Z"
}
Additional data: { label: [32m'test-key'[39m, timestamp: [32m'2025-08-02T20:44:06.586Z'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-failure.test.ts > useKeyGeneration - Key Generation Failure > should re-throw errors for component handling
Additional data: {
  commandError: {
    code: [32m'KEY_GENERATION_FAILED'[39m,
    message: [32m'Failed to generate key'[39m,
    recovery_guidance: [32m'Please try again'[39m,
    user_actionable: [33mtrue[39m
  }
}
Additional data: {
  errorType: [32m'Object'[39m,
  errorDetails: {
    code: [32m'KEY_GENERATION_FAILED'[39m,
    message: [32m'Failed to generate key'[39m,
    recovery_guidance: [32m'Please try again'[39m,
    user_actionable: [33mtrue[39m
  }
}

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-failure.test.ts > useKeyGeneration - Key Generation Failure > should clear error correctly
[2025-08-02T20:44:06.588Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "",
  "passphraseLength": 0
}
[2025-08-02T20:44:06.588Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": false,
  "error": "Key label is required"
}
Additional data: {
  error: {
    code: [32m'INVALID_INPUT'[39m,
    message: [32m'Key label is required'[39m,
    recovery_guidance: [32m'Please provide a unique label for the new key'[39m,
    user_actionable: [33mtrue[39m
  }
}

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.578Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.599Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/hooks/useKeyGeneration/key-generation-failure.test.ts (3 tests) 32ms
stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.602Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/hooks/useFileDecryption/decryption-validation.test.ts (5 tests) 28ms
stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.603Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.608Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/hooks/useFileDecryption/decryption-success.test.ts (3 tests) 13ms
 ✓ src/__tests__/hooks/useFileEncryption/encryption-validation.test.ts (5 tests | 1 skipped) 13ms
stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.612Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/hooks/useFileEncryption/encryption-failure.test.ts (3 tests) 18ms
stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.615Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.619Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-success.test.ts
Barqly Logger available at window.__barqlyLogger

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.629Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-success.test.ts > useKeyGeneration - Key Generation Success > should generate key successfully
[2025-08-02T20:44:06.630Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:06.630Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:06.631Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:06.631Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.631Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.631Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:06.631Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-success.test.ts > useKeyGeneration - Key Generation Success > should generate key successfully
[2025-08-02T20:44:06.631Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:06.631Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-success.test.ts > useKeyGeneration - Key Generation Success > should generate key successfully
[2025-08-02T20:44:06.632Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test-key",
  "timestamp": "2025-08-02T20:44:06.632Z"
}
Additional data: { label: [32m'test-key'[39m, timestamp: [32m'2025-08-02T20:44:06.632Z'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-success.test.ts > useKeyGeneration - Key Generation Success > should generate key successfully
[2025-08-02T20:44:06.632Z] [INFO] [useKeyGeneration] Key generation successful | Data: {
  "publicKey": "age1......",
  "keyId": "test-key-id",
  "savedPath": "~/.config/barqly-vault/keys/test-key-id.age"
}
Additional data: {
  publicKey: [32m'age1......'[39m,
  keyId: [32m'test-key-id'[39m,
  savedPath: [32m'~/.config/barqly-vault/keys/test-key-id.age'[39m
}

 ✓ src/__tests__/hooks/useFileDecryption/state-management.test.ts (6 tests) 13ms
stdout | src/__tests__/hooks/useKeyGeneration/key-generation-success.test.ts > useKeyGeneration - Key Generation Success > should call generate_key command with correct parameters
[2025-08-02T20:44:06.634Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:06.634Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:06.634Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:06.634Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.634Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.634Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:06.634Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-success.test.ts > useKeyGeneration - Key Generation Success > should call generate_key command with correct parameters
[2025-08-02T20:44:06.635Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:06.635Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-success.test.ts > useKeyGeneration - Key Generation Success > should call generate_key command with correct parameters
[2025-08-02T20:44:06.635Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test-key",
  "timestamp": "2025-08-02T20:44:06.635Z"
}
Additional data: { label: [32m'test-key'[39m, timestamp: [32m'2025-08-02T20:44:06.635Z'[39m }

 ✓ src/__tests__/hooks/useFileEncryption/encryption-success.test.ts (3 tests) 14ms
stdout | src/__tests__/hooks/useKeyGeneration/key-generation-success.test.ts > useKeyGeneration - Key Generation Success > should call generate_key command with correct parameters
[2025-08-02T20:44:06.635Z] [INFO] [useKeyGeneration] Key generation successful | Data: {
  "publicKey": "age1......",
  "keyId": "test-key-id",
  "savedPath": "~/.config/barqly-vault/keys/test-key-id.age"
}
Additional data: {
  publicKey: [32m'age1......'[39m,
  keyId: [32m'test-key-id'[39m,
  savedPath: [32m'~/.config/barqly-vault/keys/test-key-id.age'[39m
}

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-success.test.ts > useKeyGeneration - Key Generation Success > should set up progress listener for key generation
[2025-08-02T20:44:06.644Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:06.644Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:06.644Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:06.644Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.644Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.644Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:06.644Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-success.test.ts > useKeyGeneration - Key Generation Success > should set up progress listener for key generation
[2025-08-02T20:44:06.644Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:06.644Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-success.test.ts > useKeyGeneration - Key Generation Success > should set up progress listener for key generation
[2025-08-02T20:44:06.644Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test-key",
  "timestamp": "2025-08-02T20:44:06.644Z"
}
Additional data: { label: [32m'test-key'[39m, timestamp: [32m'2025-08-02T20:44:06.644Z'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/key-generation-success.test.ts > useKeyGeneration - Key Generation Success > should set up progress listener for key generation
[2025-08-02T20:44:06.644Z] [INFO] [useKeyGeneration] Key generation successful | Data: {
  "publicKey": "age1......",
  "keyId": "test-key-id",
  "savedPath": "~/.config/barqly-vault/keys/test-key-id.age"
}
Additional data: {
  publicKey: [32m'age1......'[39m,
  keyId: [32m'test-key-id'[39m,
  savedPath: [32m'~/.config/barqly-vault/keys/test-key-id.age'[39m
}

 ✓ src/__tests__/hooks/useFileEncryption/file-selection.test.ts (4 tests) 12ms
stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.648Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/hooks/useKeyGeneration/key-generation-success.test.ts (3 tests) 25ms
stdout | src/__tests__/hooks/useKeyGeneration/progress-tracking.test.ts
Barqly Logger available at window.__barqlyLogger

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.656Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.660Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/hooks/useKeyGeneration/progress-tracking.test.ts > useKeyGeneration - Progress Tracking > should handle progress updates during key generation
[2025-08-02T20:44:06.662Z] [DEBUG] [Hook:useKeyGeneration] setLabel | Data: {
  "label": "test-key"
}
[2025-08-02T20:44:06.663Z] [DEBUG] [Hook:useKeyGeneration] setPassphrase | Data: {
  "length": 18
}
[2025-08-02T20:44:06.663Z] [DEBUG] [Hook:useKeyGeneration] generateKey started | Data: {
  "label": "test-key",
  "passphraseLength": 18
}
[2025-08-02T20:44:06.663Z] [DEBUG] [useKeyGeneration] Label validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.663Z] [DEBUG] [useKeyGeneration] Passphrase validation result | Data: {
  "isValid": true
}
[2025-08-02T20:44:06.663Z] [INFO] [useKeyGeneration] Starting key generation process | Data: {
  "label": "test-key"
}
Additional data: { label: [32m'test-key'[39m }
[2025-08-02T20:44:06.664Z] [DEBUG] [useKeyGeneration] Calling validate_passphrase command | Data: {
  "passphraseLength": 18
}

stdout | src/__tests__/hooks/useKeyGeneration/progress-tracking.test.ts > useKeyGeneration - Progress Tracking > should handle progress updates during key generation
[2025-08-02T20:44:06.664Z] [INFO] [useKeyGeneration] Passphrase validation complete | Data: {
  "isValid": true
}
Additional data: { isValid: [33mtrue[39m, message: [90mundefined[39m }
[2025-08-02T20:44:06.664Z] [DEBUG] [useKeyGeneration] Setting up progress listener

stdout | src/__tests__/hooks/useKeyGeneration/progress-tracking.test.ts > useKeyGeneration - Progress Tracking > should handle progress updates during key generation
[2025-08-02T20:44:06.664Z] [INFO] [useKeyGeneration] Calling generate_key command | Data: {
  "label": "test-key",
  "timestamp": "2025-08-02T20:44:06.664Z"
}
Additional data: { label: [32m'test-key'[39m, timestamp: [32m'2025-08-02T20:44:06.664Z'[39m }

stdout | src/__tests__/hooks/useKeyGeneration/progress-tracking.test.ts > useKeyGeneration - Progress Tracking > should handle progress updates during key generation
[2025-08-02T20:44:06.664Z] [INFO] [useKeyGeneration] Key generation successful | Data: {
  "publicKey": "age1......",
  "keyId": "test-key-id",
  "savedPath": "~/.config/barqly-vault/keys/test-key-id.age"
}
Additional data: {
  publicKey: [32m'age1......'[39m,
  keyId: [32m'test-key-id'[39m,
  savedPath: [32m'~/.config/barqly-vault/keys/test-key-id.age'[39m
}

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.665Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/hooks/useKeyGeneration/progress-tracking.test.ts > useKeyGeneration - Progress Tracking > should handle progress updates during key generation
[2025-08-02T20:44:06.665Z] [DEBUG] [useKeyGeneration] Progress update received | Data: {
  "operation_id": "test-op",
  "progress": 0.5,
  "message": "Generating key...",
  "timestamp": "2025-08-02T20:44:06.665Z"
}

 ✓ src/__tests__/hooks/useKeyGeneration/progress-tracking.test.ts (1 test) 12ms
stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.678Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.685Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/hooks/useFileDecryption/decryption-failure.test.ts (2 tests) 12ms
stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.688Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.707Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.712Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.715Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.719Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.723Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.727Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.731Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.737Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.740Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.742Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.746Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.724Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.747Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.749Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.751Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.754Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.757Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.757Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.760Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.761Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.763Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.763Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.767Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.769Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.771Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.775Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.779Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.783Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.783Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.786Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.787Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.788Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.790Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.791Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.793Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.795Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.797Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.798Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.799Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.802Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.803Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.805Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.806Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.809Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.808Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.811Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.811Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.814Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.815Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
[2025-08-02T20:44:06.819Z] [DEBUG] [Component:SetupPage] handleKeyGeneration started | Data: {
  "keyLabel": "Test Key",
  "passphraseLength": 18,
  "confirmPassphraseLength": 18
}
[2025-08-02T20:44:06.819Z] [INFO] [SetupPage] Setting hook state for key generation | Data: {
  "keyLabel": "Test Key"
}
Additional data: { keyLabel: [32m'Test Key'[39m }
[2025-08-02T20:44:06.819Z] [INFO] [SetupPage] Calling generateKey function

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.819Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Error Handling > should handle generateKey throwing error
Additional data: {
  error: Error: Network error
      at [90m/Users/nauman/projects/barqly-vault/src-ui/[39msrc/__tests__/pages/SetupPage.test.tsx:289:57
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
      at new Promise (<anonymous>)
      at runWithTimeout (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
      at runTest (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
}

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.823Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.825Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Success State > should display success message and public key
[2025-08-02T20:44:06.825Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.827Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.829Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Success State > should handle success reset via close button
[2025-08-02T20:44:06.829Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.832Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.834Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Progress Display > should display progress bar and context when progress is available
[2025-08-02T20:44:06.840Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.845Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.848Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.850Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Reset and Cleanup > should handle form reset via Clear button
[2025-08-02T20:44:06.845Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.853Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.856Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.857Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.859Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.862Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Reset and Cleanup > should handle Escape key for form reset
[2025-08-02T20:44:06.862Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.865Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.868Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.870Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Reset and Cleanup > should not reset on Escape when loading
[2025-08-02T20:44:06.869Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.873Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.875Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Form Reset and Cleanup > should not reset on Escape when success is shown
[2025-08-02T20:44:06.876Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.878Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.881Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.883Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/pages/SetupPage.test.tsx > SetupPage > Accessibility and Focus Management > should set focus on success message when key is generated
[2025-08-02T20:44:06.883Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/pages/SetupPage.test.tsx (20 tests) 1516ms
stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.886Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.889Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
[2025-08-02T20:44:06.899Z] [DEBUG] [Component:SetupPage] handleKeyGeneration started | Data: {
  "keyLabel": "Test Key",
  "passphraseLength": 18,
  "confirmPassphraseLength": 18
}
[2025-08-02T20:44:06.899Z] [INFO] [SetupPage] Setting hook state for key generation | Data: {
  "keyLabel": "Test Key"
}
Additional data: { keyLabel: [32m'Test Key'[39m }
[2025-08-02T20:44:06.899Z] [INFO] [SetupPage] Calling generateKey function

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works
Additional data: {
  error: Error: Tauri invoke function not available
      at [90m/Users/nauman/projects/barqly-vault/src-ui/[39msrc/__tests__/regression/form-submission-tauri-api.test.tsx:111:28
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
      at file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
      at new Promise (<anonymous>)
      at runWithTimeout (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
      at runTest (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
      at runSuite (file:///Users/nauman/projects/barqly-vault/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
}

 ✓ src/__tests__/components/forms/KeyGenerationForm.test.tsx (21 tests) 1677ms
stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should handle environment mismatch where form works but Tauri APIs fail
[2025-08-02T20:44:06.907Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:06.969Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:06.982Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:06.985Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:06.986Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:06.989Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:06.994Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:06.995Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:06.998Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.000Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.004Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.006Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.009Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.019Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.022Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.025Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/hooks/useFileDecryption/progress-tracking.test.ts (1 test) 8ms
stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.029Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.034Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.037Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/lib/environment/platform.test.ts > platform detection > isTauri > should return true when __TAURI__ is present and truthy
[Platform Detection] Window properties: {
  __TAURI_INTERNALS__: [33mfalse[39m,
  isTauri: [33mfalse[39m,
  __TAURI_IPC__: [33mfalse[39m,
  __TAURI__: [33mtrue[39m,
  __TAURI_CORE__: [33mfalse[39m,
  userAgent: [32m'Mozilla/5.0 (darwin) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/26.1.0'[39m,
  windowKeys: [ [32m'__TAURI__'[39m ]
}

stdout | src/__tests__/lib/environment/platform.test.ts > platform detection > isTauri > should return true when __TAURI_INTERNALS__ is present (Tauri v2)
[Platform Detection] Window properties: {
  __TAURI_INTERNALS__: [33mtrue[39m,
  isTauri: [33mfalse[39m,
  __TAURI_IPC__: [33mfalse[39m,
  __TAURI__: [33mfalse[39m,
  __TAURI_CORE__: [33mfalse[39m,
  userAgent: [32m'Mozilla/5.0 (darwin) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/26.1.0'[39m,
  windowKeys: [ [32m'__TAURI_INTERNALS__'[39m ]
}

stdout | src/__tests__/lib/environment/platform.test.ts > platform detection > isTauri > should return true when window.isTauri is present (Tauri v2)
[Platform Detection] Window properties: {
  __TAURI_INTERNALS__: [33mfalse[39m,
  isTauri: [33mtrue[39m,
  __TAURI_IPC__: [33mfalse[39m,
  __TAURI__: [33mfalse[39m,
  __TAURI_CORE__: [33mfalse[39m,
  userAgent: [32m'Mozilla/5.0 (darwin) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/26.1.0'[39m,
  windowKeys: []
}

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.039Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/lib/environment/platform.test.ts > platform detection > isTauri > should return true when __TAURI_IPC__ is present (Tauri v2)
[Platform Detection] Window properties: {
  __TAURI_INTERNALS__: [33mfalse[39m,
  isTauri: [33mfalse[39m,
  __TAURI_IPC__: [33mtrue[39m,
  __TAURI__: [33mfalse[39m,
  __TAURI_CORE__: [33mfalse[39m,
  userAgent: [32m'Mozilla/5.0 (darwin) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/26.1.0'[39m,
  windowKeys: [ [32m'__TAURI_IPC__'[39m ]
}

stdout | src/__tests__/lib/environment/platform.test.ts > platform detection > isTauri > should return false when all Tauri globals are falsy
[Platform Detection] Window properties: {
  __TAURI_INTERNALS__: [33mfalse[39m,
  isTauri: [33mfalse[39m,
  __TAURI_IPC__: [33mfalse[39m,
  __TAURI__: [33mfalse[39m,
  __TAURI_CORE__: [33mfalse[39m,
  userAgent: [32m'Mozilla/5.0 (darwin) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/26.1.0'[39m,
  windowKeys: [ [32m'__TAURI__'[39m, [32m'__TAURI_INTERNALS__'[39m, [32m'__TAURI_IPC__'[39m ]
}
[Platform Detection] Window properties: {
  __TAURI_INTERNALS__: [33mfalse[39m,
  isTauri: [33mfalse[39m,
  __TAURI_IPC__: [33mfalse[39m,
  __TAURI__: [33mfalse[39m,
  __TAURI_CORE__: [33mfalse[39m,
  userAgent: [32m'Mozilla/5.0 (darwin) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/26.1.0'[39m,
  windowKeys: [ [32m'__TAURI__'[39m, [32m'__TAURI_INTERNALS__'[39m, [32m'__TAURI_IPC__'[39m ]
}

stdout | src/__tests__/lib/environment/platform.test.ts > platform detection > isTauri > should return false when no Tauri globals are present
[Platform Detection] Window properties: {
  __TAURI_INTERNALS__: [33mfalse[39m,
  isTauri: [33mfalse[39m,
  __TAURI_IPC__: [33mfalse[39m,
  __TAURI__: [33mfalse[39m,
  __TAURI_CORE__: [33mfalse[39m,
  userAgent: [32m'Mozilla/5.0 (darwin) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/26.1.0'[39m,
  windowKeys: []
}

stdout | src/__tests__/lib/environment/platform.test.ts > platform detection > isTauri > should handle truthy __TAURI__ values correctly
[Platform Detection] Window properties: {
  __TAURI_INTERNALS__: [33mfalse[39m,
  isTauri: [33mfalse[39m,
  __TAURI_IPC__: [33mfalse[39m,
  __TAURI__: [33mtrue[39m,
  __TAURI_CORE__: [33mfalse[39m,
  userAgent: [32m'Mozilla/5.0 (darwin) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/26.1.0'[39m,
  windowKeys: [ [32m'__TAURI__'[39m ]
}
[Platform Detection] Window properties: {
  __TAURI_INTERNALS__: [33mfalse[39m,
  isTauri: [33mfalse[39m,
  __TAURI_IPC__: [33mfalse[39m,
  __TAURI__: [33mtrue[39m,
  __TAURI_CORE__: [33mfalse[39m,
  userAgent: [32m'Mozilla/5.0 (darwin) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/26.1.0'[39m,
  windowKeys: [ [32m'__TAURI__'[39m ]
}
[Platform Detection] Window properties: {
  __TAURI_INTERNALS__: [33mfalse[39m,
  isTauri: [33mfalse[39m,
  __TAURI_IPC__: [33mfalse[39m,
  __TAURI__: [33mtrue[39m,
  __TAURI_CORE__: [33mfalse[39m,
  userAgent: [32m'Mozilla/5.0 (darwin) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/26.1.0'[39m,
  windowKeys: [ [32m'__TAURI__'[39m ]
}
[Platform Detection] Window properties: {
  __TAURI_INTERNALS__: [33mfalse[39m,
  isTauri: [33mfalse[39m,
  __TAURI_IPC__: [33mfalse[39m,
  __TAURI__: [33mtrue[39m,
  __TAURI_CORE__: [33mfalse[39m,
  userAgent: [32m'Mozilla/5.0 (darwin) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/26.1.0'[39m,
  windowKeys: [ [32m'__TAURI__'[39m ]
}

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.042Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/lib/environment/platform.test.ts (28 tests) 5ms
stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.045Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.047Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.050Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.052Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.055Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.058Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/lib/validation/form-validation.test.ts (26 tests) 3ms
stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.060Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/hooks/useFileEncryption/initial-state.test.ts (1 test) 7ms
stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.063Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/lib/validation/passphrase-validation.test.ts (18 tests) 2ms
stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.065Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/hooks/useFileEncryption/progress-tracking.test.ts (1 test) 8ms
stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.068Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/hooks/useFileDecryption/initial-state.test.ts (1 test) 6ms
stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.079Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/hooks/useKeyGeneration/initial-state.test.ts
Barqly Logger available at window.__barqlyLogger

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.082Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.084Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.087Z] [DEBUG] [Component:SetupPage] Mount

 ✓ src/__tests__/hooks/useKeyGeneration/initial-state.test.ts (1 test) 6ms
stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.089Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.091Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.094Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.096Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.099Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.102Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.104Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.107Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.110Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.113Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.116Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.118Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.120Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.122Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.129Z] [DEBUG] [Component:SetupPage] handleKeyGeneration started | Data: {
  "keyLabel": "My Test Key",
  "passphraseLength": 18,
  "confirmPassphraseLength": 18
}
[2025-08-02T20:44:07.129Z] [INFO] [SetupPage] Setting hook state for key generation | Data: {
  "keyLabel": "My Test Key"
}
Additional data: { keyLabel: [32m'My Test Key'[39m }
[2025-08-02T20:44:07.129Z] [INFO] [SetupPage] Calling generateKey function

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls
[2025-08-02T20:44:07.130Z] [INFO] [SetupPage] generateKey completed successfully

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.134Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.148Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.150Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.153Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.155Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.158Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.160Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.162Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.164Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.173Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.175Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.177Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.179Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.181Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.183Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.185Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.187Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.189Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.191Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.194Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.196Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.206Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.208Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.211Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.213Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.215Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.217Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.219Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.221Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.223Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.225Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.227Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.229Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.231Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.233Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.235Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.237Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.240Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.242Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.243Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.245Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid
[2025-08-02T20:44:07.247Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should render form correctly in web environment without breaking
[2025-08-02T20:44:07.258Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.302Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.314Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.317Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.319Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.321Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.323Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.325Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.327Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.328Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.337Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.340Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.342Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.344Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.346Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.348Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.350Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.352Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.355Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.357Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.359Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.361Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.371Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.373Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.375Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.377Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.379Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.381Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.384Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.386Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.388Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.390Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.392Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.394Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
[2025-08-02T20:44:07.399Z] [DEBUG] [Component:SetupPage] handleKeyGeneration started | Data: {
  "keyLabel": "Test Key",
  "passphraseLength": 12,
  "confirmPassphraseLength": 12
}
[2025-08-02T20:44:07.399Z] [INFO] [SetupPage] Setting hook state for key generation | Data: {
  "keyLabel": "Test Key"
}
Additional data: { keyLabel: [32m'Test Key'[39m }
[2025-08-02T20:44:07.399Z] [INFO] [SetupPage] Calling generateKey function

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission
Additional data: {
  error: {
    code: [32m'INTERNAL_ERROR'[39m,
    message: [32m'This feature requires the desktop application'[39m,
    recovery_guidance: [32m'Please use the desktop version of Barqly Vault to access this feature'[39m,
    user_actionable: [33mtrue[39m
  }
}

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should prevent default form submission behavior while still calling API
[2025-08-02T20:44:07.404Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.448Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.458Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.461Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.463Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.465Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.466Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.469Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.471Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.472Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.482Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.484Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.486Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.488Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.490Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.492Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.495Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.497Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.499Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.501Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.503Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.504Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.513Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.515Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.517Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.519Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.522Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.524Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.525Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.527Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.530Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.532Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.534Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.536Z] [DEBUG] [Component:SetupPage] Mount

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.548Z] [DEBUG] [Component:SetupPage] handleKeyGeneration started | Data: {
  "keyLabel": "Test Key",
  "passphraseLength": 12,
  "confirmPassphraseLength": 12
}
[2025-08-02T20:44:07.548Z] [INFO] [SetupPage] Setting hook state for key generation | Data: {
  "keyLabel": "Test Key"
}
Additional data: { keyLabel: [32m'Test Key'[39m }
[2025-08-02T20:44:07.548Z] [INFO] [SetupPage] Calling generateKey function

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.548Z] [INFO] [SetupPage] generateKey completed successfully

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.559Z] [DEBUG] [Component:SetupPage] handleKeyGeneration started | Data: {
  "keyLabel": "Test Key",
  "passphraseLength": 12,
  "confirmPassphraseLength": 12
}
[2025-08-02T20:44:07.559Z] [INFO] [SetupPage] Setting hook state for key generation | Data: {
  "keyLabel": "Test Key"
}
Additional data: { keyLabel: [32m'Test Key'[39m }
[2025-08-02T20:44:07.559Z] [INFO] [SetupPage] Calling generateKey function

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.559Z] [INFO] [SetupPage] generateKey completed successfully

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.570Z] [DEBUG] [Component:SetupPage] handleKeyGeneration started | Data: {
  "keyLabel": "Test Key",
  "passphraseLength": 12,
  "confirmPassphraseLength": 12
}
[2025-08-02T20:44:07.570Z] [INFO] [SetupPage] Setting hook state for key generation | Data: {
  "keyLabel": "Test Key"
}
Additional data: { keyLabel: [32m'Test Key'[39m }
[2025-08-02T20:44:07.570Z] [INFO] [SetupPage] Calling generateKey function

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly
[2025-08-02T20:44:07.570Z] [INFO] [SetupPage] generateKey completed successfully

stdout | src/__tests__/regression/form-submission-tauri-api.test.tsx > Regression: Form Submission + Tauri API Integration > REGRESSION: Error Recovery and State Management > should allow form to remain functional after API errors
[2025-08-02T20:44:07.573Z] [DEBUG] [Component:SetupPage] Mount

 ❯ src/__tests__/regression/form-submission-tauri-api.test.tsx (10 tests | 5 failed) 2256ms
   × Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent "Cannot read properties of undefined (reading 'invoke')" in desktop environment 1353ms
     → Unable to find role="form"

Ignored nodes: comments, script, style
[36m<body>[39m
  [36m<div>[39m
    [36m<div[39m
      [33mclass[39m=[32m"min-h-screen bg-gray-50"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"p-4"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"w-full max-w-2xl mx-auto"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"bg-white rounded-lg shadow-sm border border-gray-200 "[39m
            [33mdata-testid[39m=[32m"form-section"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"px-6 py-4 border-b border-gray-100"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex items-center justify-between mb-3"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center gap-3"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33maria-hidden[39m=[32m"true"[39m
                    [33mclass[39m=[32m"lucide lucide-shield w-6 h-6 text-blue-600"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mheight[39m=[32m"24"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                    [33mwidth[39m=[32m"24"[39m
                    [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                  [36m<h1[39m
                    [33mclass[39m=[32m"text-xl font-semibold"[39m
                  [36m>[39m
                    [0mBarqly Vault[0m
                  [36m</h1>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-gray-400"[39m
                  [36m>[39m
                    [0m|[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-sm text-gray-600"[39m
                  [36m>[39m
                    [0mBitcoin Legacy Protection[0m
                  [36m</span>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex space-x-1"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                    [33mdata-discover[39m=[32m"true"[39m
                    [33mhref[39m=[32m"/setup"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33maria-hidden[39m=[32m"true"[39m
                      [33mclass[39m=[32m"lucide lucide-key w-4 h-4 mr-1.5"[39m
                      [33mfill[39m=[32m"none"[39m
                      [33mheight[39m=[32m"24"[39m
                      [33mstroke[39m=[32m"currentColor"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                      [33mviewBox[39m=[32m"0 0 24 24"[39m
                      [33mwidth[39m=[32m"24"[39m
                      [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                    [36m>[39m
                      [36m<path[39m
                        [33md[39m=[32m"m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4"[39m
                      [36m/>[39m
                      [36m<path[39m
                        [33md[39m=[32m"m21 2-9.6 9.6"[39m
                      [36m/>[39m
                      [36m<circle[39m
                        [33mcx[39m=[32m"7.5"[39m
                        [33mcy[39m=[32m"15.5"[39m
                        [33mr[39m=[32m"5.5"[39m
                      [36m/>[39m
                    [36m</svg>[39m
                    [36m<span>[39m
                      [0mSetup[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                    [33mdata-discover[39m=[32m"true"[39m
                    [33mhref[39m=[32m"/encrypt"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33maria-hidden[39m=[32m"true"[39m
                      [33mclass[39m=[32m"lucide lucide-lock w-4 h-4 mr-1.5"[39m
                      [33mfill[39m=[32m"none"[39m
                      [33mheight[39m=[32m"24"[39m
                      [33mstroke[39m=[32m"currentColor"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                      [33mviewBox[39m=[32m"0 0 24 24"[39m
                      [33mwidth[39m=[32m"24"[39m
                      [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                    [36m>[39m
                      [36m<rect[39m
                        [33mheight[39m=[32m"11"[39m
                        [33mrx[39m=[32m"2"[39m
                        [33mry[39m=[32m"2"[39m
                        [33mwidth[39m=[32m"18"[39m
                        [33mx[39m=[32m"3"[39m
                        [33my[39m=[32m"11"[39m
                      [36m/>[39m
                      [36m<path[39m
                        [33md[39m=[32m"M7 11V7a5 5 0 0 1 10 0v4"[39m
                      [36m/>[39m
                    [36m</svg>[39m
                    [36m<span>[39m
                      [0mEncrypt[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                    [33mdata-discover[39m=[32m"true"[39m
                    [33mhref[39m=[32m"/decrypt"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33maria-hidden[39m=[32m"true"[39m
                      [33mclass[39m=[32m"lucide lucide-lock-open w-4 h-4 mr-1.5"[39m
                   ...

Ignored nodes: comments, script, style
[36m<html>[39m
  [36m<head />[39m
  [36m<body>[39m
    [36m<div>[39m
      [36m<div[39m
        [33mclass[39m=[32m"min-h-screen bg-gray-50"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"p-4"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"w-full max-w-2xl mx-auto"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"bg-white rounded-lg shadow-sm border border-gray-200 "[39m
              [33mdata-testid[39m=[32m"form-section"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"px-6 py-4 border-b border-gray-100"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center justify-between mb-3"[39m
                [36m>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex items-center gap-3"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33maria-hidden[39m=[32m"true"[39m
                      [33mclass[39m=[32m"lucide lucide-shield w-6 h-6 text-blue-600"[39m
                      [33mfill[39m=[32m"none"[39m
                      [33mheight[39m=[32m"24"[39m
                      [33mstroke[39m=[32m"currentColor"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                      [33mviewBox[39m=[32m"0 0 24 24"[39m
                      [33mwidth[39m=[32m"24"[39m
                      [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                    [36m>[39m
                      [36m<path[39m
                        [33md[39m=[32m"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"[39m
                      [36m/>[39m
                    [36m</svg>[39m
                    [36m<h1[39m
                      [33mclass[39m=[32m"text-xl font-semibold"[39m
                    [36m>[39m
                      [0mBarqly Vault[0m
                    [36m</h1>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"text-gray-400"[39m
                    [36m>[39m
                      [0m|[0m
                    [36m</span>[39m
                    [36m<span[39m
                      [33mclass[39m=[32m"text-sm text-gray-600"[39m
                    [36m>[39m
                      [0mBitcoin Legacy Protection[0m
                    [36m</span>[39m
                  [36m</div>[39m
                  [36m<div[39m
                    [33mclass[39m=[32m"flex space-x-1"[39m
                  [36m>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                      [33mdata-discover[39m=[32m"true"[39m
                      [33mhref[39m=[32m"/setup"[39m
                    [36m>[39m
                      [36m<svg[39m
                        [33maria-hidden[39m=[32m"true"[39m
                        [33mclass[39m=[32m"lucide lucide-key w-4 h-4 mr-1.5"[39m
                        [33mfill[39m=[32m"none"[39m
                        [33mheight[39m=[32m"24"[39m
                        [33mstroke[39m=[32m"currentColor"[39m
                        [33mstroke-linecap[39m=[32m"round"[39m
                        [33mstroke-linejoin[39m=[32m"round"[39m
                        [33mstroke-width[39m=[32m"2"[39m
                        [33mviewBox[39m=[32m"0 0 24 24"[39m
                        [33mwidth[39m=[32m"24"[39m
                        [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                      [36m>[39m
                        [36m<path[39m
                          [33md[39m=[32m"m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4"[39m
                        [36m/>[39m
                        [36m<path[39m
                          [33md[39m=[32m"m21 2-9.6 9.6"[39m
                        [36m/>[39m
                        [36m<circle[39m
                          [33mcx[39m=[32m"7.5"[39m
                          [33mcy[39m=[32m"15.5"[39m
                          [33mr[39m=[32m"5.5"[39m
                        [36m/>[39m
                      [36m</svg>[39m
                      [36m<span>[39m
                        [0mSetup[0m
                      [36m</span>[39m
                    [36m</a>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                      [33mdata-discover[39m=[32m"true"[39m
                      [33mhref[39m=[32m"/encrypt"[39m
                    [36m>[39m
                      [36m<svg[39m
                        [33maria-hidden[39m=[32m"true"[39m
                        [33mclass[39m=[32m"lucide lucide-lock w-4 h-4 mr-1.5"[39m
                        [33mfill[39m=[32m"none"[39m
                        [33mheight[39m=[32m"24"[39m
                        [33mstroke[39m=[32m"currentColor"[39m
                        [33mstroke-linecap[39m=[32m"round"[39m
                        [33mstroke-linejoin[39m=[32m"round"[39m
                        [33mstroke-width[39m=[32m"2"[39m
                        [33mviewBox[39m=[32m"0 0 24 24"[39m
                        [33mwidth[39m=[32m"24"[39m
                        [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                      [36m>[39m
                        [36m<rect[39m
                          [33mheight[39m=[32m"11"[39m
                          [33mrx[39m=[32m"2"[39m
                          [33mry[39m=[32m"2"[39m
                          [33mwidth[39m=[32m"18"[39m
                          [33mx[39m=[32m"3"[39m
                          [33my[39m=[32m"11"[39m
                        [36m/>[39m
                        [36m<path[39m
                          [33md[39m=[32m"M7 11V7a5 5 0 0 1 10 0v4"[39m
                        [36m/>[39m
                      [36m</svg>[39m
                      [36m<span>[39m
                        [0mEncrypt[0m
                      [36m</span>[39m
                    [36m</a>[39m
                    [36m<a[39m
                      [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                      [33mdata-discover[39m=[32m"t...
   ✓ Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should prevent API failure when form submission via button click works 183ms
   × Regression: Form Submission + Tauri API Integration > REGRESSION: Form Submission Works But API Fails > should handle environment mismatch where form works but Tauri APIs fail 62ms
     → Unable to find an accessible element with the role "form"

Here are the accessible roles:

  heading:

  Name "Barqly Vault":
  [36m<h1[39m
    [33mclass[39m=[32m"text-xl font-semibold"[39m
  [36m/>[39m

  Name "Create Your Security Identity":
  [36m<h2[39m
    [33mclass[39m=[32m"text-lg font-medium"[39m
    [33mdata-testid[39m=[32m"section-title"[39m
  [36m/>[39m

  --------------------------------------------------
  link:

  Name "Setup":
  [36m<a[39m
    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
    [33mdata-discover[39m=[32m"true"[39m
    [33mhref[39m=[32m"/setup"[39m
  [36m/>[39m

  Name "Encrypt":
  [36m<a[39m
    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
    [33mdata-discover[39m=[32m"true"[39m
    [33mhref[39m=[32m"/encrypt"[39m
  [36m/>[39m

  Name "Decrypt":
  [36m<a[39m
    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
    [33mdata-discover[39m=[32m"true"[39m
    [33mhref[39m=[32m"/decrypt"[39m
  [36m/>[39m

  --------------------------------------------------
  alert:

  Name "":
  [36m<div[39m
    [33maria-live[39m=[32m"polite"[39m
    [33mclass[39m=[32m"relative w-full rounded-lg border transition-all duration-200 bg-destructive/10 border-destructive/20 text-destructive-foreground p-4"[39m
    [33mrole[39m=[32m"alert"[39m
  [36m/>[39m

  --------------------------------------------------
  paragraph:

  Name "":
  [36m<p[39m
    [33mclass[39m=[32m"text-sm leading-relaxed"[39m
  [36m/>[39m

  Name "":
  [36m<p[39m
    [33mclass[39m=[32m"text-sm opacity-80"[39m
  [36m/>[39m

  Name "":
  [36m<p[39m
    [33mclass[39m=[32m"text-xs text-gray-500"[39m
    [33mdata-testid[39m=[32m"helper-text"[39m
  [36m/>[39m

  Name "":
  [36m<p[39m
    [33mclass[39m=[32m"text-sm font-medium text-gray-500"[39m
  [36m/>[39m

  --------------------------------------------------
  strong:

  Name "":
  [36m<strong />[39m

  --------------------------------------------------
  textbox:

  Name "Key Label required":
  [36m<input[39m
    [33maria-describedby[39m=[32m"key-label-description"[39m
    [33maria-invalid[39m=[32m"false"[39m
    [33mclass[39m=[32m"w-full
        h-11 px-3.5 py-2.5 text-base
        border rounded-md transition-all duration-200 ease-in-out
        focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent
        hover:border-gray-400 hover:shadow-sm
        disabled:bg-gray-50 disabled:cursor-not-allowed
        transform focus:scale-[1.02] hover:scale-[1.01] border-gray-400 "[39m
    [33mdata-testid[39m=[32m"enhanced-input"[39m
    [33mid[39m=[32m"key-label"[39m
    [33mplaceholder[39m=[32m"e.g., Family Bitcoin Vault"[39m
    [33mvalue[39m=[32m""[39m
  [36m/>[39m

  --------------------------------------------------
  button:

  Name "Show passphrase":
  [36m<button[39m
    [33maria-label[39m=[32m"Show passphrase"[39m
    [33mclass[39m=[32m"absolute right-3 top-1/2 -translate-y-1/2 p-1 text-gray-500 hover:text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded transition-colors"[39m
    [33mdata-testid[39m=[32m"visibility-toggle"[39m
    [33mtype[39m=[32m"button"[39m
  [36m/>[39m

  Name "Show passphrase":
  [36m<button[39m
    [33maria-label[39m=[32m"Show passphrase"[39m
    [33mclass[39m=[32m"absolute right-3 top-1/2 -translate-y-1/2 p-1 text-gray-500 hover:text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded transition-colors"[39m
    [33mdata-testid[39m=[32m"visibility-toggle"[39m
    [33mtype[39m=[32m"button"[39m
  [36m/>[39m

  Name "Clear":
  [36m<button[39m
    [33mclass[39m=[32m"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-400 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors"[39m
    [33mtype[39m=[32m"button"[39m
  [36m/>[39m

  Name "Create Key":
  [36m<button[39m
    [33mclass[39m=[32m"
          inline-flex items-center justify-center gap-2
      font-medium text-white
      bg-blue-600 hover:bg-blue-700
      rounded-md transition-all duration-200 ease-in-out
      hover:shadow-md hover:-translate-y-0.5
      active:translate-y-0 active:shadow-sm active:scale-95
      focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2
      disabled:opacity-50 disabled:cursor-not-allowed
      disabled:hover:translate-y-0 disabled:hover:shadow-none
      disabled:hover:bg-blue-600
      min-h-[44px] touch-manipulation
          h-14 px-8 text-lg
          
          
        "[39m
    [33mdata-testid[39m=[32m"primary-button"[39m
    [33mdisabled[39m=[32m""[39m
    [33mtype[39m=[32m"submit"[39m
  [36m/>[39m

  Name "How does this work?":
  [36m<button[39m
    [33maria-controls[39m=[32m"help-content"[39m
    [33maria-expanded[39m=[32m"false"[39m
    [33mclass[39m=[32m"inline-flex items-center gap-1.5 text-sm text-blue-600 hover:text-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded"[39m
    [33mdata-testid[39m=[32m"help-trigger"[39m
  [36m/>[39m

  --------------------------------------------------

Ignored nodes: comments, script, style
[36m<body>[39m
  [36m<div>[39m
    [36m<div[39m
      [33mclass[39m=[32m"min-h-screen bg-gray-50"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"p-4"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"w-full max-w-2xl mx-auto"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"bg-white rounded-lg shadow-sm border border-gray-200 "[39m
            [33mdata-testid[39m=[32m"form-section"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"px-6 py-4 border-b border-gray-100"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex items-center justify-between mb-3"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center gap-3"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33maria-hidden[39m=[32m"true"[39m
                    [33mclass[39m=[32m"lucide lucide-shield w-6 h-6 text-blue-600"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mheight[39m=[32m"24"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                    [33mwidth[39m=[32m"24"[39m
                    [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                  [36m<h1[39m
                    [33mclass[39m=[32m"text-xl font-semibold"[39m
                  [36m>[39m
                    [0mBarqly Vault[0m
                  [36m</h1>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-gray-400"[39m
                  [36m>[39m
                    [0m|[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-sm text-gray-600"[39m
                  [36m>[39m
                    [0mBitcoin Legacy Protection[0m
                  [36m</span>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex space-x-1"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                    [33mdata-discover[39m=[32m"true"[39m
                    [33mhref[39m=[32m"/setup"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33maria-hidden[39m=[32m"true"[39m
                      [33mclass[39m=[32m"lucide lucide-key w-4 h-4 mr-1.5"[39m
                      [33mfill[39m=[32m"none"[39m
                      [33mheight[39m=[32m"24"[39m
                      [33mstroke[39m=[32m"currentColor"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                      [33mviewBox[39m=[32m"0 0 24 24"[39m
                      [33mwidth[39m=[32m"24"[39m
                      [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                    [36m>[39m
                      [36m<path[39m
                        [33md[39m=[32m"m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4"[39m
                      [36m/>[39m
                      [36m<path[39m
                        [33md[39m=[32m"m21 2-9.6 9.6"[39m
                      [36m/>[39m
                      [36m<circle[39m
                        [33mcx[39m=[32m"7.5"[39m
                        [33mcy[39m=[32m"15.5"[39m
                        [33mr[39m=[32m"5.5"[39m
                      [36m/>[39m
                    [36m</svg>[39m
                    [36m<span>[39m
                      [0mSetup[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                    [33mdata-discover[39m=[32m"true"[39m
                    [33mhref[39m=[32m"/encrypt"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33maria-hidden[39m=[32m"true"[39m
                      [33mclass[39m=[32m"lucide lucide-lock w-4 h-4 mr-1.5"[39m
                      [33mfill[39m=[32m"none"[39m
                      [33mheight[39m=[32m"24"[39m
                      [33mstroke[39m=[32m"currentColor"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                      [33mviewBox[39m=[32m"0 0 24 24"[39m
                      [33mwidth[39m=[32m"24"[39m
                      [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                    [36m>[39m
                      [36m<rect[39m
                        [33mheight[39m=[32m"11"[39m
                        [33mrx[39m=[32m"2"[39m
                        [33mry[39m=[32m"2"[39m
                        [33mwidth[39m=[32m"18"[39m
                        [33mx[39m=[32m"3"[39m
                        [33my[39m=[32m"11"[39m
                      [36m/>[39m
                      [36m<path[39m
                        [33md[39m=[32m"M7 11V7a5 5 0 0 1 10 0v4"[39m
                      [36m/>[39m
                    [36m</svg>[39m
                    [36m<span>[39m
                      [0mEncrypt[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                    [33mdata-discover[39m=[32m"true"[39m
                    [33mhref[39m=[32m"/decrypt"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33maria-hidden[39m=[32m"true"[39m
                      [33mclass[39m=[32m"lucide lucide-lock-open w-4 h-4 mr-1.5"[39m
                   ...
   ✓ Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should ensure form state is properly synced with hook state before API calls 165ms
   ✓ Regression: Form Submission + Tauri API Integration > REGRESSION: State Synchronization Between Form and Hook > should handle form validation preventing API calls when state is invalid 125ms
   × Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should render form correctly in web environment without breaking 43ms
     → Unable to find an accessible element with the role "form"

Here are the accessible roles:

  heading:

  Name "Barqly Vault":
  [36m<h1[39m
    [33mclass[39m=[32m"text-xl font-semibold"[39m
  [36m/>[39m

  Name "Create Your Security Identity":
  [36m<h2[39m
    [33mclass[39m=[32m"text-lg font-medium"[39m
    [33mdata-testid[39m=[32m"section-title"[39m
  [36m/>[39m

  --------------------------------------------------
  link:

  Name "Setup":
  [36m<a[39m
    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
    [33mdata-discover[39m=[32m"true"[39m
    [33mhref[39m=[32m"/setup"[39m
  [36m/>[39m

  Name "Encrypt":
  [36m<a[39m
    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
    [33mdata-discover[39m=[32m"true"[39m
    [33mhref[39m=[32m"/encrypt"[39m
  [36m/>[39m

  Name "Decrypt":
  [36m<a[39m
    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
    [33mdata-discover[39m=[32m"true"[39m
    [33mhref[39m=[32m"/decrypt"[39m
  [36m/>[39m

  --------------------------------------------------
  textbox:

  Name "Key Label required":
  [36m<input[39m
    [33maria-describedby[39m=[32m"key-label-description"[39m
    [33maria-invalid[39m=[32m"false"[39m
    [33mclass[39m=[32m"w-full
        h-11 px-3.5 py-2.5 text-base
        border rounded-md transition-all duration-200 ease-in-out
        focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent
        hover:border-gray-400 hover:shadow-sm
        disabled:bg-gray-50 disabled:cursor-not-allowed
        transform focus:scale-[1.02] hover:scale-[1.01] border-gray-400 "[39m
    [33mdata-testid[39m=[32m"enhanced-input"[39m
    [33mid[39m=[32m"key-label"[39m
    [33mplaceholder[39m=[32m"e.g., Family Bitcoin Vault"[39m
    [33mvalue[39m=[32m""[39m
  [36m/>[39m

  --------------------------------------------------
  paragraph:

  Name "":
  [36m<p[39m
    [33mclass[39m=[32m"text-xs text-gray-500"[39m
    [33mdata-testid[39m=[32m"helper-text"[39m
  [36m/>[39m

  Name "":
  [36m<p[39m
    [33mclass[39m=[32m"text-sm font-medium text-gray-500"[39m
  [36m/>[39m

  --------------------------------------------------
  button:

  Name "Show passphrase":
  [36m<button[39m
    [33maria-label[39m=[32m"Show passphrase"[39m
    [33mclass[39m=[32m"absolute right-3 top-1/2 -translate-y-1/2 p-1 text-gray-500 hover:text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded transition-colors"[39m
    [33mdata-testid[39m=[32m"visibility-toggle"[39m
    [33mtype[39m=[32m"button"[39m
  [36m/>[39m

  Name "Show passphrase":
  [36m<button[39m
    [33maria-label[39m=[32m"Show passphrase"[39m
    [33mclass[39m=[32m"absolute right-3 top-1/2 -translate-y-1/2 p-1 text-gray-500 hover:text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded transition-colors"[39m
    [33mdata-testid[39m=[32m"visibility-toggle"[39m
    [33mtype[39m=[32m"button"[39m
  [36m/>[39m

  Name "Clear":
  [36m<button[39m
    [33mclass[39m=[32m"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-400 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors"[39m
    [33mtype[39m=[32m"button"[39m
  [36m/>[39m

  Name "Create Key":
  [36m<button[39m
    [33mclass[39m=[32m"
          inline-flex items-center justify-center gap-2
      font-medium text-white
      bg-blue-600 hover:bg-blue-700
      rounded-md transition-all duration-200 ease-in-out
      hover:shadow-md hover:-translate-y-0.5
      active:translate-y-0 active:shadow-sm active:scale-95
      focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2
      disabled:opacity-50 disabled:cursor-not-allowed
      disabled:hover:translate-y-0 disabled:hover:shadow-none
      disabled:hover:bg-blue-600
      min-h-[44px] touch-manipulation
          h-14 px-8 text-lg
          
          
        "[39m
    [33mdata-testid[39m=[32m"primary-button"[39m
    [33mdisabled[39m=[32m""[39m
    [33mtype[39m=[32m"submit"[39m
  [36m/>[39m

  Name "How does this work?":
  [36m<button[39m
    [33maria-controls[39m=[32m"help-content"[39m
    [33maria-expanded[39m=[32m"false"[39m
    [33mclass[39m=[32m"inline-flex items-center gap-1.5 text-sm text-blue-600 hover:text-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded"[39m
    [33mdata-testid[39m=[32m"help-trigger"[39m
  [36m/>[39m

  --------------------------------------------------

Ignored nodes: comments, script, style
[36m<body>[39m
  [36m<div>[39m
    [36m<div[39m
      [33mclass[39m=[32m"min-h-screen bg-gray-50"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"p-4"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"w-full max-w-2xl mx-auto"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"bg-white rounded-lg shadow-sm border border-gray-200 "[39m
            [33mdata-testid[39m=[32m"form-section"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"px-6 py-4 border-b border-gray-100"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex items-center justify-between mb-3"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center gap-3"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33maria-hidden[39m=[32m"true"[39m
                    [33mclass[39m=[32m"lucide lucide-shield w-6 h-6 text-blue-600"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mheight[39m=[32m"24"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                    [33mwidth[39m=[32m"24"[39m
                    [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                  [36m<h1[39m
                    [33mclass[39m=[32m"text-xl font-semibold"[39m
                  [36m>[39m
                    [0mBarqly Vault[0m
                  [36m</h1>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-gray-400"[39m
                  [36m>[39m
                    [0m|[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-sm text-gray-600"[39m
                  [36m>[39m
                    [0mBitcoin Legacy Protection[0m
                  [36m</span>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex space-x-1"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                    [33mdata-discover[39m=[32m"true"[39m
                    [33mhref[39m=[32m"/setup"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33maria-hidden[39m=[32m"true"[39m
                      [33mclass[39m=[32m"lucide lucide-key w-4 h-4 mr-1.5"[39m
                      [33mfill[39m=[32m"none"[39m
                      [33mheight[39m=[32m"24"[39m
                      [33mstroke[39m=[32m"currentColor"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                      [33mviewBox[39m=[32m"0 0 24 24"[39m
                      [33mwidth[39m=[32m"24"[39m
                      [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                    [36m>[39m
                      [36m<path[39m
                        [33md[39m=[32m"m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4"[39m
                      [36m/>[39m
                      [36m<path[39m
                        [33md[39m=[32m"m21 2-9.6 9.6"[39m
                      [36m/>[39m
                      [36m<circle[39m
                        [33mcx[39m=[32m"7.5"[39m
                        [33mcy[39m=[32m"15.5"[39m
                        [33mr[39m=[32m"5.5"[39m
                      [36m/>[39m
                    [36m</svg>[39m
                    [36m<span>[39m
                      [0mSetup[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                    [33mdata-discover[39m=[32m"true"[39m
                    [33mhref[39m=[32m"/encrypt"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33maria-hidden[39m=[32m"true"[39m
                      [33mclass[39m=[32m"lucide lucide-lock w-4 h-4 mr-1.5"[39m
                      [33mfill[39m=[32m"none"[39m
                      [33mheight[39m=[32m"24"[39m
                      [33mstroke[39m=[32m"currentColor"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                      [33mviewBox[39m=[32m"0 0 24 24"[39m
                      [33mwidth[39m=[32m"24"[39m
                      [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                    [36m>[39m
                      [36m<rect[39m
                        [33mheight[39m=[32m"11"[39m
                        [33mrx[39m=[32m"2"[39m
                        [33mry[39m=[32m"2"[39m
                        [33mwidth[39m=[32m"18"[39m
                        [33mx[39m=[32m"3"[39m
                        [33my[39m=[32m"11"[39m
                      [36m/>[39m
                      [36m<path[39m
                        [33md[39m=[32m"M7 11V7a5 5 0 0 1 10 0v4"[39m
                      [36m/>[39m
                    [36m</svg>[39m
                    [36m<span>[39m
                      [0mEncrypt[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                    [33mdata-discover[39m=[32m"true"[39m
                    [33mhref[39m=[32m"/decrypt"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33maria-hidden[39m=[32m"true"[39m
                      [33mclass[39m=[32m"lucide lucide-lock-open w-4 h-4 mr-1.5"[39m
                   ...
   ✓ Regression: Form Submission + Tauri API Integration > REGRESSION: Web Environment Compatibility > should handle web environment API errors gracefully during form submission 102ms
   × Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should prevent default form submission behavior while still calling API 44ms
     → Unable to find an accessible element with the role "form"

Here are the accessible roles:

  heading:

  Name "Barqly Vault":
  [36m<h1[39m
    [33mclass[39m=[32m"text-xl font-semibold"[39m
  [36m/>[39m

  Name "Create Your Security Identity":
  [36m<h2[39m
    [33mclass[39m=[32m"text-lg font-medium"[39m
    [33mdata-testid[39m=[32m"section-title"[39m
  [36m/>[39m

  --------------------------------------------------
  link:

  Name "Setup":
  [36m<a[39m
    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
    [33mdata-discover[39m=[32m"true"[39m
    [33mhref[39m=[32m"/setup"[39m
  [36m/>[39m

  Name "Encrypt":
  [36m<a[39m
    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
    [33mdata-discover[39m=[32m"true"[39m
    [33mhref[39m=[32m"/encrypt"[39m
  [36m/>[39m

  Name "Decrypt":
  [36m<a[39m
    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
    [33mdata-discover[39m=[32m"true"[39m
    [33mhref[39m=[32m"/decrypt"[39m
  [36m/>[39m

  --------------------------------------------------
  textbox:

  Name "Key Label required":
  [36m<input[39m
    [33maria-describedby[39m=[32m"key-label-description"[39m
    [33maria-invalid[39m=[32m"false"[39m
    [33mclass[39m=[32m"w-full
        h-11 px-3.5 py-2.5 text-base
        border rounded-md transition-all duration-200 ease-in-out
        focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent
        hover:border-gray-400 hover:shadow-sm
        disabled:bg-gray-50 disabled:cursor-not-allowed
        transform focus:scale-[1.02] hover:scale-[1.01] border-gray-400 "[39m
    [33mdata-testid[39m=[32m"enhanced-input"[39m
    [33mid[39m=[32m"key-label"[39m
    [33mplaceholder[39m=[32m"e.g., Family Bitcoin Vault"[39m
    [33mvalue[39m=[32m""[39m
  [36m/>[39m

  --------------------------------------------------
  paragraph:

  Name "":
  [36m<p[39m
    [33mclass[39m=[32m"text-xs text-gray-500"[39m
    [33mdata-testid[39m=[32m"helper-text"[39m
  [36m/>[39m

  Name "":
  [36m<p[39m
    [33mclass[39m=[32m"text-sm font-medium text-gray-500"[39m
  [36m/>[39m

  --------------------------------------------------
  button:

  Name "Show passphrase":
  [36m<button[39m
    [33maria-label[39m=[32m"Show passphrase"[39m
    [33mclass[39m=[32m"absolute right-3 top-1/2 -translate-y-1/2 p-1 text-gray-500 hover:text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded transition-colors"[39m
    [33mdata-testid[39m=[32m"visibility-toggle"[39m
    [33mtype[39m=[32m"button"[39m
  [36m/>[39m

  Name "Show passphrase":
  [36m<button[39m
    [33maria-label[39m=[32m"Show passphrase"[39m
    [33mclass[39m=[32m"absolute right-3 top-1/2 -translate-y-1/2 p-1 text-gray-500 hover:text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded transition-colors"[39m
    [33mdata-testid[39m=[32m"visibility-toggle"[39m
    [33mtype[39m=[32m"button"[39m
  [36m/>[39m

  Name "Clear":
  [36m<button[39m
    [33mclass[39m=[32m"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-400 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors"[39m
    [33mtype[39m=[32m"button"[39m
  [36m/>[39m

  Name "Create Key":
  [36m<button[39m
    [33mclass[39m=[32m"
          inline-flex items-center justify-center gap-2
      font-medium text-white
      bg-blue-600 hover:bg-blue-700
      rounded-md transition-all duration-200 ease-in-out
      hover:shadow-md hover:-translate-y-0.5
      active:translate-y-0 active:shadow-sm active:scale-95
      focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2
      disabled:opacity-50 disabled:cursor-not-allowed
      disabled:hover:translate-y-0 disabled:hover:shadow-none
      disabled:hover:bg-blue-600
      min-h-[44px] touch-manipulation
          h-14 px-8 text-lg
          
          
        "[39m
    [33mdata-testid[39m=[32m"primary-button"[39m
    [33mdisabled[39m=[32m""[39m
    [33mtype[39m=[32m"submit"[39m
  [36m/>[39m

  Name "How does this work?":
  [36m<button[39m
    [33maria-controls[39m=[32m"help-content"[39m
    [33maria-expanded[39m=[32m"false"[39m
    [33mclass[39m=[32m"inline-flex items-center gap-1.5 text-sm text-blue-600 hover:text-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded"[39m
    [33mdata-testid[39m=[32m"help-trigger"[39m
  [36m/>[39m

  --------------------------------------------------

Ignored nodes: comments, script, style
[36m<body>[39m
  [36m<div>[39m
    [36m<div[39m
      [33mclass[39m=[32m"min-h-screen bg-gray-50"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"p-4"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"w-full max-w-2xl mx-auto"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"bg-white rounded-lg shadow-sm border border-gray-200 "[39m
            [33mdata-testid[39m=[32m"form-section"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"px-6 py-4 border-b border-gray-100"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex items-center justify-between mb-3"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center gap-3"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33maria-hidden[39m=[32m"true"[39m
                    [33mclass[39m=[32m"lucide lucide-shield w-6 h-6 text-blue-600"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mheight[39m=[32m"24"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                    [33mwidth[39m=[32m"24"[39m
                    [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                  [36m<h1[39m
                    [33mclass[39m=[32m"text-xl font-semibold"[39m
                  [36m>[39m
                    [0mBarqly Vault[0m
                  [36m</h1>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-gray-400"[39m
                  [36m>[39m
                    [0m|[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-sm text-gray-600"[39m
                  [36m>[39m
                    [0mBitcoin Legacy Protection[0m
                  [36m</span>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex space-x-1"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                    [33mdata-discover[39m=[32m"true"[39m
                    [33mhref[39m=[32m"/setup"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33maria-hidden[39m=[32m"true"[39m
                      [33mclass[39m=[32m"lucide lucide-key w-4 h-4 mr-1.5"[39m
                      [33mfill[39m=[32m"none"[39m
                      [33mheight[39m=[32m"24"[39m
                      [33mstroke[39m=[32m"currentColor"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                      [33mviewBox[39m=[32m"0 0 24 24"[39m
                      [33mwidth[39m=[32m"24"[39m
                      [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                    [36m>[39m
                      [36m<path[39m
                        [33md[39m=[32m"m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4"[39m
                      [36m/>[39m
                      [36m<path[39m
                        [33md[39m=[32m"m21 2-9.6 9.6"[39m
                      [36m/>[39m
                      [36m<circle[39m
                        [33mcx[39m=[32m"7.5"[39m
                        [33mcy[39m=[32m"15.5"[39m
                        [33mr[39m=[32m"5.5"[39m
                      [36m/>[39m
                    [36m</svg>[39m
                    [36m<span>[39m
                      [0mSetup[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                    [33mdata-discover[39m=[32m"true"[39m
                    [33mhref[39m=[32m"/encrypt"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33maria-hidden[39m=[32m"true"[39m
                      [33mclass[39m=[32m"lucide lucide-lock w-4 h-4 mr-1.5"[39m
                      [33mfill[39m=[32m"none"[39m
                      [33mheight[39m=[32m"24"[39m
                      [33mstroke[39m=[32m"currentColor"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                      [33mviewBox[39m=[32m"0 0 24 24"[39m
                      [33mwidth[39m=[32m"24"[39m
                      [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                    [36m>[39m
                      [36m<rect[39m
                        [33mheight[39m=[32m"11"[39m
                        [33mrx[39m=[32m"2"[39m
                        [33mry[39m=[32m"2"[39m
                        [33mwidth[39m=[32m"18"[39m
                        [33mx[39m=[32m"3"[39m
                        [33my[39m=[32m"11"[39m
                      [36m/>[39m
                      [36m<path[39m
                        [33md[39m=[32m"M7 11V7a5 5 0 0 1 10 0v4"[39m
                      [36m/>[39m
                    [36m</svg>[39m
                    [36m<span>[39m
                      [0mEncrypt[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                    [33mdata-discover[39m=[32m"true"[39m
                    [33mhref[39m=[32m"/decrypt"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33maria-hidden[39m=[32m"true"[39m
                      [33mclass[39m=[32m"lucide lucide-lock-open w-4 h-4 mr-1.5"[39m
                   ...
   ✓ Regression: Form Submission + Tauri API Integration > REGRESSION: Form Event Handling > should handle Enter key in different form fields correctly 126ms
   × Regression: Form Submission + Tauri API Integration > REGRESSION: Error Recovery and State Management > should allow form to remain functional after API errors 52ms
     → Unable to find an accessible element with the role "button" and name `/close/i`

Here are the accessible roles:

  heading:

  Name "Barqly Vault":
  [36m<h1[39m
    [33mclass[39m=[32m"text-xl font-semibold"[39m
  [36m/>[39m

  Name "Create Your Security Identity":
  [36m<h2[39m
    [33mclass[39m=[32m"text-lg font-medium"[39m
    [33mdata-testid[39m=[32m"section-title"[39m
  [36m/>[39m

  --------------------------------------------------
  link:

  Name "Setup":
  [36m<a[39m
    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
    [33mdata-discover[39m=[32m"true"[39m
    [33mhref[39m=[32m"/setup"[39m
  [36m/>[39m

  Name "Encrypt":
  [36m<a[39m
    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
    [33mdata-discover[39m=[32m"true"[39m
    [33mhref[39m=[32m"/encrypt"[39m
  [36m/>[39m

  Name "Decrypt":
  [36m<a[39m
    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
    [33mdata-discover[39m=[32m"true"[39m
    [33mhref[39m=[32m"/decrypt"[39m
  [36m/>[39m

  --------------------------------------------------
  alert:

  Name "":
  [36m<div[39m
    [33maria-live[39m=[32m"polite"[39m
    [33mclass[39m=[32m"relative w-full rounded-lg border transition-all duration-200 bg-destructive/10 border-destructive/20 text-destructive-foreground p-4"[39m
    [33mrole[39m=[32m"alert"[39m
  [36m/>[39m

  --------------------------------------------------
  paragraph:

  Name "":
  [36m<p[39m
    [33mclass[39m=[32m"text-sm leading-relaxed"[39m
  [36m/>[39m

  Name "":
  [36m<p[39m
    [33mclass[39m=[32m"text-sm opacity-80"[39m
  [36m/>[39m

  Name "":
  [36m<p[39m
    [33mclass[39m=[32m"text-xs text-gray-500"[39m
    [33mdata-testid[39m=[32m"helper-text"[39m
  [36m/>[39m

  Name "":
  [36m<p[39m
    [33mclass[39m=[32m"text-sm font-medium text-gray-500"[39m
  [36m/>[39m

  --------------------------------------------------
  strong:

  Name "":
  [36m<strong />[39m

  --------------------------------------------------
  textbox:

  Name "Key Label required":
  [36m<input[39m
    [33maria-describedby[39m=[32m"key-label-description"[39m
    [33maria-invalid[39m=[32m"false"[39m
    [33mclass[39m=[32m"w-full
        h-11 px-3.5 py-2.5 text-base
        border rounded-md transition-all duration-200 ease-in-out
        focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent
        hover:border-gray-400 hover:shadow-sm
        disabled:bg-gray-50 disabled:cursor-not-allowed
        transform focus:scale-[1.02] hover:scale-[1.01] border-gray-400 "[39m
    [33mdata-testid[39m=[32m"enhanced-input"[39m
    [33mid[39m=[32m"key-label"[39m
    [33mplaceholder[39m=[32m"e.g., Family Bitcoin Vault"[39m
    [33mvalue[39m=[32m""[39m
  [36m/>[39m

  --------------------------------------------------
  button:

  Name "Show passphrase":
  [36m<button[39m
    [33maria-label[39m=[32m"Show passphrase"[39m
    [33mclass[39m=[32m"absolute right-3 top-1/2 -translate-y-1/2 p-1 text-gray-500 hover:text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded transition-colors"[39m
    [33mdata-testid[39m=[32m"visibility-toggle"[39m
    [33mtype[39m=[32m"button"[39m
  [36m/>[39m

  Name "Show passphrase":
  [36m<button[39m
    [33maria-label[39m=[32m"Show passphrase"[39m
    [33mclass[39m=[32m"absolute right-3 top-1/2 -translate-y-1/2 p-1 text-gray-500 hover:text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded transition-colors"[39m
    [33mdata-testid[39m=[32m"visibility-toggle"[39m
    [33mtype[39m=[32m"button"[39m
  [36m/>[39m

  Name "Clear":
  [36m<button[39m
    [33mclass[39m=[32m"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-400 rounded-md hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors"[39m
    [33mtype[39m=[32m"button"[39m
  [36m/>[39m

  Name "Create Key":
  [36m<button[39m
    [33mclass[39m=[32m"
          inline-flex items-center justify-center gap-2
      font-medium text-white
      bg-blue-600 hover:bg-blue-700
      rounded-md transition-all duration-200 ease-in-out
      hover:shadow-md hover:-translate-y-0.5
      active:translate-y-0 active:shadow-sm active:scale-95
      focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2
      disabled:opacity-50 disabled:cursor-not-allowed
      disabled:hover:translate-y-0 disabled:hover:shadow-none
      disabled:hover:bg-blue-600
      min-h-[44px] touch-manipulation
          h-14 px-8 text-lg
          
          
        "[39m
    [33mdata-testid[39m=[32m"primary-button"[39m
    [33mdisabled[39m=[32m""[39m
    [33mtype[39m=[32m"submit"[39m
  [36m/>[39m

  Name "How does this work?":
  [36m<button[39m
    [33maria-controls[39m=[32m"help-content"[39m
    [33maria-expanded[39m=[32m"false"[39m
    [33mclass[39m=[32m"inline-flex items-center gap-1.5 text-sm text-blue-600 hover:text-blue-700 transition-colors focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 rounded"[39m
    [33mdata-testid[39m=[32m"help-trigger"[39m
  [36m/>[39m

  --------------------------------------------------

Ignored nodes: comments, script, style
[36m<body>[39m
  [36m<div>[39m
    [36m<div[39m
      [33mclass[39m=[32m"min-h-screen bg-gray-50"[39m
    [36m>[39m
      [36m<div[39m
        [33mclass[39m=[32m"p-4"[39m
      [36m>[39m
        [36m<div[39m
          [33mclass[39m=[32m"w-full max-w-2xl mx-auto"[39m
        [36m>[39m
          [36m<div[39m
            [33mclass[39m=[32m"bg-white rounded-lg shadow-sm border border-gray-200 "[39m
            [33mdata-testid[39m=[32m"form-section"[39m
          [36m>[39m
            [36m<div[39m
              [33mclass[39m=[32m"px-6 py-4 border-b border-gray-100"[39m
            [36m>[39m
              [36m<div[39m
                [33mclass[39m=[32m"flex items-center justify-between mb-3"[39m
              [36m>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex items-center gap-3"[39m
                [36m>[39m
                  [36m<svg[39m
                    [33maria-hidden[39m=[32m"true"[39m
                    [33mclass[39m=[32m"lucide lucide-shield w-6 h-6 text-blue-600"[39m
                    [33mfill[39m=[32m"none"[39m
                    [33mheight[39m=[32m"24"[39m
                    [33mstroke[39m=[32m"currentColor"[39m
                    [33mstroke-linecap[39m=[32m"round"[39m
                    [33mstroke-linejoin[39m=[32m"round"[39m
                    [33mstroke-width[39m=[32m"2"[39m
                    [33mviewBox[39m=[32m"0 0 24 24"[39m
                    [33mwidth[39m=[32m"24"[39m
                    [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                  [36m>[39m
                    [36m<path[39m
                      [33md[39m=[32m"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z"[39m
                    [36m/>[39m
                  [36m</svg>[39m
                  [36m<h1[39m
                    [33mclass[39m=[32m"text-xl font-semibold"[39m
                  [36m>[39m
                    [0mBarqly Vault[0m
                  [36m</h1>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-gray-400"[39m
                  [36m>[39m
                    [0m|[0m
                  [36m</span>[39m
                  [36m<span[39m
                    [33mclass[39m=[32m"text-sm text-gray-600"[39m
                  [36m>[39m
                    [0mBitcoin Legacy Protection[0m
                  [36m</span>[39m
                [36m</div>[39m
                [36m<div[39m
                  [33mclass[39m=[32m"flex space-x-1"[39m
                [36m>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                    [33mdata-discover[39m=[32m"true"[39m
                    [33mhref[39m=[32m"/setup"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33maria-hidden[39m=[32m"true"[39m
                      [33mclass[39m=[32m"lucide lucide-key w-4 h-4 mr-1.5"[39m
                      [33mfill[39m=[32m"none"[39m
                      [33mheight[39m=[32m"24"[39m
                      [33mstroke[39m=[32m"currentColor"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                      [33mviewBox[39m=[32m"0 0 24 24"[39m
                      [33mwidth[39m=[32m"24"[39m
                      [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                    [36m>[39m
                      [36m<path[39m
                        [33md[39m=[32m"m15.5 7.5 2.3 2.3a1 1 0 0 0 1.4 0l2.1-2.1a1 1 0 0 0 0-1.4L19 4"[39m
                      [36m/>[39m
                      [36m<path[39m
                        [33md[39m=[32m"m21 2-9.6 9.6"[39m
                      [36m/>[39m
                      [36m<circle[39m
                        [33mcx[39m=[32m"7.5"[39m
                        [33mcy[39m=[32m"15.5"[39m
                        [33mr[39m=[32m"5.5"[39m
                      [36m/>[39m
                    [36m</svg>[39m
                    [36m<span>[39m
                      [0mSetup[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                    [33mdata-discover[39m=[32m"true"[39m
                    [33mhref[39m=[32m"/encrypt"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33maria-hidden[39m=[32m"true"[39m
                      [33mclass[39m=[32m"lucide lucide-lock w-4 h-4 mr-1.5"[39m
                      [33mfill[39m=[32m"none"[39m
                      [33mheight[39m=[32m"24"[39m
                      [33mstroke[39m=[32m"currentColor"[39m
                      [33mstroke-linecap[39m=[32m"round"[39m
                      [33mstroke-linejoin[39m=[32m"round"[39m
                      [33mstroke-width[39m=[32m"2"[39m
                      [33mviewBox[39m=[32m"0 0 24 24"[39m
                      [33mwidth[39m=[32m"24"[39m
                      [33mxmlns[39m=[32m"http://www.w3.org/2000/svg"[39m
                    [36m>[39m
                      [36m<rect[39m
                        [33mheight[39m=[32m"11"[39m
                        [33mrx[39m=[32m"2"[39m
                        [33mry[39m=[32m"2"[39m
                        [33mwidth[39m=[32m"18"[39m
                        [33mx[39m=[32m"3"[39m
                        [33my[39m=[32m"11"[39m
                      [36m/>[39m
                      [36m<path[39m
                        [33md[39m=[32m"M7 11V7a5 5 0 0 1 10 0v4"[39m
                      [36m/>[39m
                    [36m</svg>[39m
                    [36m<span>[39m
                      [0mEncrypt[0m
                    [36m</span>[39m
                  [36m</a>[39m
                  [36m<a[39m
                    [33mclass[39m=[32m"flex items-center px-3 py-1.5 text-sm font-medium rounded-md transition-colors text-gray-600 hover:text-gray-900 hover:bg-gray-100"[39m
                    [33mdata-discover[39m=[32m"true"[39m
                    [33mhref[39m=[32m"/decrypt"[39m
                  [36m>[39m
                    [36m<svg[39m
                      [33maria-hidden[39m=[32m"true"[39m
                      [33mclass[39m=[32m"lucide lucide-lock-open w-4 h-4 mr-1.5"[39m
                   ...

 Test Files  2 failed | 44 passed (46)
      Tests  12 failed | 510 passed | 1 skipped (523)
   Start at  13:44:04
   Duration  3.20s (transform 1.17s, setup 2.96s, collect 4.70s, tests 8.19s, environment 14.34s, prepare 2.92s)

