name: Build Linux Packages

on:
  workflow_dispatch:
  push:
    tags: ['v*']

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libgtk-3-dev \
            libayatana-appindicator3-dev

      - name: Install frontend dependencies
        run: npm install --prefix src-ui

      - name: Build Linux packages
        run: make linux-build

      - name: Find built packages
        id: packages
        run: |
          APPIMAGE=$(find target -name "*.AppImage" | head -1)
          DEB=$(find target -name "*.deb" | head -1)
          
          echo "appimage=$APPIMAGE" >> $GITHUB_OUTPUT
          echo "deb=$DEB" >> $GITHUB_OUTPUT
          
          if [ -n "$APPIMAGE" ]; then
            echo "✅ Found AppImage: $APPIMAGE"
          fi
          
          if [ -n "$DEB" ]; then
            echo "✅ Found .deb package: $DEB"
          fi

      - name: Upload AppImage artifact
        if: steps.packages.outputs.appimage != ''
        uses: actions/upload-artifact@v4
        with:
          name: barqly-vault-appimage
          path: ${{ steps.packages.outputs.appimage }}

      - name: Upload .deb artifact
        if: steps.packages.outputs.deb != ''
        uses: actions/upload-artifact@v4
        with:
          name: barqly-vault-deb
          path: ${{ steps.packages.outputs.deb }}

      - name: Create Release (if tag)
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ steps.packages.outputs.appimage }}
            ${{ steps.packages.outputs.deb }}
          draft: true
          prerelease: false