name: 'Update Download Page'
description: 'Updates the public downloads page with latest release information'

inputs:
  version:
    description: 'Release version (e.g., 1.0.0)'
    required: true
  github-token:
    description: 'GitHub token for API access'
    required: true
    default: ${{ github.token }}

runs:
  using: 'composite'
  steps:
    - name: Update Downloads Page
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        VERSION: ${{ inputs.version }}
      run: |
        echo "🔄 Updating downloads page for version $VERSION"
        
        # Get release information from GitHub API
        RELEASE_DATA=$(gh api repos/${{ github.repository }}/releases/tags/v$VERSION)
        RELEASE_URL=$(echo "$RELEASE_DATA" | jq -r '.html_url')
        PUBLISHED_DATE=$(echo "$RELEASE_DATA" | jq -r '.published_at' | cut -d'T' -f1)
        
        # Create downloads table for this version
        cat > /tmp/version_section.md << EOF
        ## Version $VERSION
        
        **Released:** $PUBLISHED_DATE  
        **Release Notes:** [View on GitHub]($RELEASE_URL)
        
        | Platform | Type | Download |
        |----------|------|----------|
        | macOS (Apple Silicon) | DMG | [barqly-vault-$VERSION-macos-arm64.dmg](https://github.com/${{ github.repository }}/releases/download/v$VERSION/barqly-vault-$VERSION-macos-arm64.dmg) |
        | macOS (Intel) | DMG | [barqly-vault-$VERSION-macos-x86_64.dmg](https://github.com/${{ github.repository }}/releases/download/v$VERSION/barqly-vault-$VERSION-macos-x86_64.dmg) |
        | Windows | MSI Installer | [barqly-vault-$VERSION-x64.msi](https://github.com/${{ github.repository }}/releases/download/v$VERSION/barqly-vault-$VERSION-x64.msi) |
        | Windows | ZIP Archive | [barqly-vault-$VERSION-windows-x64.zip](https://github.com/${{ github.repository }}/releases/download/v$VERSION/barqly-vault-$VERSION-windows-x64.zip) |
        | Linux | DEB Package | [barqly-vault-$VERSION-1_amd64.deb](https://github.com/${{ github.repository }}/releases/download/v$VERSION/barqly-vault-$VERSION-1_amd64.deb) |
        | Linux | RPM Package | [barqly-vault-$VERSION-1.x86_64.rpm](https://github.com/${{ github.repository }}/releases/download/v$VERSION/barqly-vault-$VERSION-1.x86_64.rpm) |
        | Linux | AppImage | [barqly-vault-$VERSION-1_amd64.AppImage](https://github.com/${{ github.repository }}/releases/download/v$VERSION/barqly-vault-$VERSION-1_amd64.AppImage) |
        | Linux | TAR.GZ | [barqly-vault-$VERSION-x86_64.tar.gz](https://github.com/${{ github.repository }}/releases/download/v$VERSION/barqly-vault-$VERSION-x86_64.tar.gz) |
        
        **Checksums:** [checksums.txt](https://github.com/${{ github.repository }}/releases/download/v$VERSION/checksums.txt)
        
        ---
        EOF
        
        # Update downloads.md
        echo "📝 Updating public-docs/downloads.md"
        
        # Create the new downloads.md content
        cat > public-docs/downloads.md << 'EOF'
        # Download Barqly Vault
        
        **Get the latest stable version of Barqly Vault**
        
        ---
        
        ## Latest Release
        
        EOF
        
        # Add the latest version section
        cat /tmp/version_section.md >> public-docs/downloads.md
        
        # Add version history header
        cat >> public-docs/downloads.md << 'EOF'
        
        ## Version History
        
        EOF
        
        # Get previous versions (limit to last 10 releases)
        echo "📚 Adding version history..."
        gh api repos/${{ github.repository }}/releases --paginate | \
        jq -r --arg current_version "v$VERSION" \
        'map(select(.tag_name != $current_version)) | 
         sort_by(.published_at) | reverse | 
         .[0:9] | 
         .[] | 
         "### " + .tag_name[1:] + "\n\n**Released:** " + (.published_at | split("T")[0]) + "  \n**Release Notes:** [View on GitHub](" + .html_url + ")\n\n| Platform | Download |\n|----------|----------|\n| macOS (Apple Silicon) | [barqly-vault-" + .tag_name[1:] + "-macos-arm64.dmg](https://github.com/${{ github.repository }}/releases/download/" + .tag_name + "/barqly-vault-" + .tag_name[1:] + "-macos-arm64.dmg) |\n| macOS (Intel) | [barqly-vault-" + .tag_name[1:] + "-macos-x86_64.dmg](https://github.com/${{ github.repository }}/releases/download/" + .tag_name + "/barqly-vault-" + .tag_name[1:] + "-macos-x86_64.dmg) |\n| Windows (MSI) | [barqly-vault-" + .tag_name[1:] + "-x64.msi](https://github.com/${{ github.repository }}/releases/download/" + .tag_name + "/barqly-vault-" + .tag_name[1:] + "-x64.msi) |\n| Windows (ZIP) | [barqly-vault-" + .tag_name[1:] + "-windows-x64.zip](https://github.com/${{ github.repository }}/releases/download/" + .tag_name + "/barqly-vault-" + .tag_name[1:] + "-windows-x64.zip) |\n| Linux (DEB) | [barqly-vault-" + .tag_name[1:] + "-1_amd64.deb](https://github.com/${{ github.repository }}/releases/download/" + .tag_name + "/barqly-vault-" + .tag_name[1:] + "-1_amd64.deb) |\n| Linux (RPM) | [barqly-vault-" + .tag_name[1:] + "-1.x86_64.rpm](https://github.com/${{ github.repository }}/releases/download/" + .tag_name + "/barqly-vault-" + .tag_name[1:] + "-1.x86_64.rpm) |\n| Linux (AppImage) | [barqly-vault-" + .tag_name[1:] + "-1_amd64.AppImage](https://github.com/${{ github.repository }}/releases/download/" + .tag_name + "/barqly-vault-" + .tag_name[1:] + "-1_amd64.AppImage) |\n| Linux (TAR.GZ) | [barqly-vault-" + .tag_name[1:] + "-x86_64.tar.gz](https://github.com/${{ github.repository }}/releases/download/" + .tag_name + "/barqly-vault-" + .tag_name[1:] + "-x86_64.tar.gz) |\n\n**Checksums:** [checksums.txt](https://github.com/${{ github.repository }}/releases/download/" + .tag_name + "/checksums.txt)\n\n---\n"' >> public-docs/downloads.md
        
        # Add footer
        cat >> public-docs/downloads.md << 'EOF'
        
        ## Installation Instructions
        
        ### macOS
        - Download the `.dmg` file appropriate for your Mac:
          - **Apple Silicon** (M1/M2/M3): Use the `arm64` version
          - **Intel**: Use the `x86_64` version
        - Open the `.dmg` file and drag Barqly Vault to Applications
        
        ### Windows
        - **Installer (Recommended)**: Download the `.msi` file and run it
        - **Portable**: Download the `.zip` file, extract, and run the executable
        
        ### Linux
        - **AppImage (Universal)**: Download, make executable (`chmod +x`), and run
        - **Debian/Ubuntu**: Download the `.deb` file and install with `dpkg -i`
        - **RedHat/Fedora**: Download the `.rpm` file and install with `rpm -i`
        - **Standalone**: Download the `.tar.gz` file and extract
        
        ---
        
        ## Checksums
        
        For security verification, always check the SHA256 checksums against the `checksums.txt` file included with each release.
        
        ---
        
        _Looking for beta releases or source code? Visit our [GitHub repository](https://github.com/barqly/barqly-vault)._
        EOF
        
        echo "✅ Downloads page updated successfully"
        
        # Also update the HTML version
        echo "📝 Updating public-docs/downloads.html"
        
        # Generate HTML table for latest release
        cat > /tmp/html_latest_section.html << EOF
        <div class="section">
          <h2>Latest Release</h2>
          <h3>Version $VERSION</h3>
          <p><strong>Released:</strong> $PUBLISHED_DATE</p>
          <p><strong>Release Notes:</strong> <a href="$RELEASE_URL" target="_blank">View on GitHub</a></p>
          
          <table class="download-table">
            <thead>
              <tr>
                <th>Platform</th>
                <th>Type</th>
                <th>Download</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>macOS (Apple Silicon)</td>
                <td>DMG</td>
                <td><a href="https://github.com/${{ github.repository }}/releases/download/v$VERSION/barqly-vault-$VERSION-macos-arm64.dmg">barqly-vault-$VERSION-macos-arm64.dmg</a></td>
              </tr>
              <tr>
                <td>macOS (Intel)</td>
                <td>DMG</td>
                <td><a href="https://github.com/${{ github.repository }}/releases/download/v$VERSION/barqly-vault-$VERSION-macos-x86_64.dmg">barqly-vault-$VERSION-macos-x86_64.dmg</a></td>
              </tr>
              <tr>
                <td>Windows</td>
                <td>MSI Installer</td>
                <td><a href="https://github.com/${{ github.repository }}/releases/download/v$VERSION/barqly-vault-$VERSION-x64.msi">barqly-vault-$VERSION-x64.msi</a></td>
              </tr>
              <tr>
                <td>Windows</td>
                <td>ZIP Archive</td>
                <td><a href="https://github.com/${{ github.repository }}/releases/download/v$VERSION/barqly-vault-$VERSION-windows-x64.zip">barqly-vault-$VERSION-windows-x64.zip</a></td>
              </tr>
              <tr>
                <td>Linux</td>
                <td>DEB Package</td>
                <td><a href="https://github.com/${{ github.repository }}/releases/download/v$VERSION/barqly-vault-$VERSION-1_amd64.deb">barqly-vault-$VERSION-1_amd64.deb</a></td>
              </tr>
              <tr>
                <td>Linux</td>
                <td>RPM Package</td>
                <td><a href="https://github.com/${{ github.repository }}/releases/download/v$VERSION/barqly-vault-$VERSION-1.x86_64.rpm">barqly-vault-$VERSION-1.x86_64.rpm</a></td>
              </tr>
              <tr>
                <td>Linux</td>
                <td>AppImage</td>
                <td><a href="https://github.com/${{ github.repository }}/releases/download/v$VERSION/barqly-vault-$VERSION-1_amd64.AppImage">barqly-vault-$VERSION-1_amd64.AppImage</a></td>
              </tr>
              <tr>
                <td>Linux</td>
                <td>TAR.GZ</td>
                <td><a href="https://github.com/${{ github.repository }}/releases/download/v$VERSION/barqly-vault-$VERSION-x86_64.tar.gz">barqly-vault-$VERSION-x86_64.tar.gz</a></td>
              </tr>
            </tbody>
          </table>
          
          <p><strong>Checksums:</strong> <a href="https://github.com/${{ github.repository }}/releases/download/v$VERSION/checksums.txt">checksums.txt</a></p>
        </div>
        EOF
        
        # Update the HTML file by replacing the "Latest Release" section
        if [ -f "public-docs/downloads/index.html" ]; then
          # Create temporary file with updated HTML
          awk '
            BEGIN { in_latest_section = 0; skip_until_next_section = 0 }
            /<div class="section">/ && /<h2>Latest Release<\/h2>/ { 
              in_latest_section = 1; skip_until_next_section = 1; next 
            }
            /<div class="section">/ && skip_until_next_section { 
              skip_until_next_section = 0; in_latest_section = 0 
            }
            !skip_until_next_section { print }
            /<div class="section">/ && !in_latest_section { print }
          ' public-docs/downloads/index.html > /tmp/downloads_before_latest.html
          
          # Find where to insert the new section (before Version History)
          awk '
            /<div class="section">/ && /<h2>Version History<\/h2>/ { 
              system("cat /tmp/html_latest_section.html")
              print ""; print ""
            }
            { print }
          ' /tmp/downloads_before_latest.html > public-docs/downloads/index.html
          
          echo "✅ HTML downloads page updated successfully"
        else
          echo "⚠️ HTML downloads page not found, skipping HTML update"
        fi
    
    - name: Commit Downloads Page
      shell: bash
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add public-docs/downloads.md public-docs/downloads/index.html
        
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "docs: update downloads page for v${{ inputs.version }}"
          git push
          echo "✅ Downloads page committed and pushed"
        fi